{
    "version": "https://jsonfeed.org/version/1",
    "title": "FeiFei",
    "description": "FeiFei 的博客",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/10/13/ce-shi-ce-shi/",
            "url": "http://example.com/2022/10/13/ce-shi-ce-shi/",
            "title": "测试",
            "date_published": "2022-10-13T12:11:42.965Z",
            "content_html": "<h1 id=\"产生的原因：\"><a href=\"#产生的原因：\" class=\"headerlink\" title=\"产生的原因：\"></a>产生的原因：</h1><p>写代码时一般使用设备独立像素来对页面布局。而在设备像素比大于1的屏幕上，我们写的1px实际上是被多个物理像素渲染，这就会出现1px在有些屏幕上看起来很粗的现象：</p>\n<span id=\"more\"></span>\n<h1 id=\"解决方法：\"><a href=\"#解决方法：\" class=\"headerlink\" title=\"解决方法：\"></a>解决方法：</h1><h2 id=\"小数值px\"><a href=\"#小数值px\" class=\"headerlink\" title=\"小数值px\"></a>小数值px</h2><p>设备像素比devicePixelRadio=2=物理像素/css像素=1px/0.5px，物理像素为1px，设置设备像素比=2，css像素设为0.5px，详情如下：<br><img src=\"https://img-blog.csdnimg.cn/6d8569f7209c489c920aea511361e6b1.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/e769e277e5044965b59ee54e78308db2.png\" alt=\"在这里插入图片描述\"></p>\n<pre><code>缺点：\n        兼容性差，目前之余IOS8+才支持，在IOS7及其以下、安卓系统都是显示0px。\n</code></pre>\n<h2 id=\"background-image，多背景渐变\"><a href=\"#background-image，多背景渐变\" class=\"headerlink\" title=\"background-image，多背景渐变\"></a>background-image，多背景渐变</h2><pre><code>设置1px的渐变背景\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/91d9655f372740bfbd77901cef44b1b9.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/df95fd164b0540d9b9808ca5be14e302.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"CSS3-box-shadow\"><a href=\"#CSS3-box-shadow\" class=\"headerlink\" title=\"CSS3,box-shadow\"></a>CSS3,box-shadow</h2><pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.shadow</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">-wedit-box-shadow</span><span class=\"token punctuation\">:</span><span class=\"token number\">0</span> <span class=\"token number\">1</span>px <span class=\"token number\">1</span>px -<span class=\"token number\">1</span>px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span>, <span class=\"token number\">0</span>, <span class=\"token number\">0</span> ,<span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span>px <span class=\"token number\">1</span>px -<span class=\"token number\">1</span>px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span>, <span class=\"token number\">0</span>, <span class=\"token number\">0</span> ,<span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/5a790dd6e9de4eceb0d3ae0086cb3d1e.png\" alt=\"在这里插入图片描述\"></p>\n<pre><code>缺点：\n    颜色不好配置\n</code></pre>\n<h2 id=\"viewport与rem结合\"><a href=\"#viewport与rem结合\" class=\"headerlink\" title=\"viewport与rem结合\"></a>viewport与rem结合</h2><pre><code>当设备像素比=2，（中和一下，使物理像素=设备独立像素）\n</code></pre>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"initial-scale=0.5,maximum-scale=0.5,minimum-scale=0.5,user-scalable=no\"</span><span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/cb7c14e4c2a442398fbdba43273879b2.png\" alt=\"在这里插入图片描述\"></p>\n<p>当设备像素比=3，将页面缩放1/3倍，</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"initial-scale=0.3333333333333333, maximum-scale=0.3333333333333333, minimum-scale=0.3333333333333333, user-scalable=no\"</span><span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>任意设备像素比</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"> <span class=\"token keyword\">const</span> scale <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> window<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> viewport <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'meta[name=\"viewport\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>viewport<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                viewport <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'meta'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                viewport<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'viewport'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                window<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>viewport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            viewport<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'width=device-width,user-scalable=no,initial-scale='</span> <span class=\"token operator\">+</span> scale <span class=\"token operator\">+</span> <span class=\"token string\">',maximum-scale='</span> <span class=\"token operator\">+</span> scale <span class=\"token operator\">+</span> <span class=\"token string\">',minimum-scale='</span> <span class=\"token operator\">+</span> scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>意味着所有页面都需要用物理像素写，不现实，可以用flexible，vm,vh来帮助适配</p>\n<h2 id=\"before，-after，transform（建议使用）\"><a href=\"#before，-after，transform（建议使用）\" class=\"headerlink\" title=\":before，:after，transform（建议使用）\"></a>:before，:after，transform（建议使用）</h2><pre><code>原理：先把原来的border去掉，然后用:before,:after重做border，并 transform 的 scale 缩小一半，原先的元素相对定位，新做的 border 绝对定位。单条border样式：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/51c044d048ca471cbba1ee191a079602.png)\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/b22f3b580ef24d9b8bdb4dd16c3c543f.png\" alt=\"在这里插入图片描述\"></p>\n<p>四条border样式：<br><img src=\"https://img-blog.csdnimg.cn/7018f0ec3639450bade5c58b41591e8a.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/0e730e901fdc468189611efcc30d72ab.png\" alt=\"在这里插入图片描述\"></p>\n<pre><code>优点：\n        所有场景都能满足\n        支持圆角\n缺点：\n        对于已经使用伪类的元素，可能需要多层嵌套\n</code></pre>\n<h2 id=\"svg（推荐使用）\"><a href=\"#svg（推荐使用）\" class=\"headerlink\" title=\"svg（推荐使用）\"></a>svg（推荐使用）</h2><pre><code>借助PostCSS的postcss-write-svg我们能直接使用border-image和background-image创建svg的1px边框\n![在这里插入图片描述](https://img-blog.csdnimg.cn/634a5b45e770438d8402f98ccf3c3546.png)\n</code></pre>\n<h2 id=\"border-image\"><a href=\"#border-image\" class=\"headerlink\" title=\"border-image\"></a>border-image</h2><p>准备一张符合要求的border-image<br>    <img src=\"https://img-blog.csdnimg.cn/183e0b5cb20540e8ad0a6885c5c186f1.png\" alt=\"在这里插入图片描述\"></p>\n<p>通常手机端的页面设计稿都是放大一倍的，如：为适应iphone retina，设计稿会设计成750*1334的分辨率，图片按照2倍大小切出来，在手机端看着就不会虚化，非常清晰。 同样，在使用border-image时，将border设计为物理1px，如下：</p>\n<pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.border-image-1px</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span>px <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-image</span><span class=\"token punctuation\">:</span><span class=\"token url\">url(linenew.png)</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span> stretch<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上文是把border设置在边框的底部，所以使用的图片是2px高，上部的1px颜色为透明，下部的1px使用视觉规定的border的颜色。<br>如果边框底部和顶部同时需要border，可以使用下面的border-image：<br><img src=\"https://img-blog.csdnimg.cn/5af4d4c0fea343169c710f59ffebc536.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.border-image-1px</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>px <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">-wekit-border-image</span><span class=\"token punctuation\">:</span><span class=\"token url\">url(linenew.png)</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span> stretch<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-image</span><span class=\"token punctuation\">:</span><span class=\"token url\">url(linenew.png)</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span> stretch<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在非视网膜屏上会出现border显示不出来的情况，需要做一下兼容：</p>\n<pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.border-image-1px</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>px solid <span class=\"token hexcode\">#666</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> only screen and <span class=\"token punctuation\">(</span><span class=\"token property\">-wekit-min-device-pixel-radio</span><span class=\"token punctuation\">:</span>2<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token selector\"><span class=\"token class\">.border-image-1px</span> </span><span class=\"token punctuation\">{</span>\n        <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">border-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span>px <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token property\">-wekit-border-image</span><span class=\"token punctuation\">:</span><span class=\"token url\">url(linenew.png)</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span> stretch<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">border-image</span><span class=\"token punctuation\">:</span><span class=\"token url\">url(linenew.png)</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span> stretch<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre><code>优点：\n    可以设置单条,多条边框，没有性能瓶颈的问题\n缺点：\n    修改颜色麻烦, 需要替换图片；圆角需要特殊处理，并且边缘会模糊\n</code></pre>\n<h2 id=\"background-image\"><a href=\"#background-image\" class=\"headerlink\" title=\"background-image\"></a>background-image</h2><pre><code>与上类似，只不过将border模拟在背景上\n</code></pre>\n<pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.background-image-1px</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token url\">url(linenew.png)</span> repeat-x left bottom<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">-wekit-background-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100%</span> <span class=\"token number\">1</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100%</span> <span class=\"token number\">1</span>px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre><code>优点：\n    可以设置单条,多条边框，没有性能瓶颈的问题。\n缺点：\n    修改颜色麻烦, 需要替换图片；圆角需要特殊处理，并且边缘会模糊。\n</code></pre>\n",
            "tags": [
                "javascript",
                "移动端",
                "css"
            ]
        },
        {
            "id": "http://example.com/2022/10/13/npm-yarn-pnpm-cnpm-dui-bi-qi-you-lie-shi/",
            "url": "http://example.com/2022/10/13/npm-yarn-pnpm-cnpm-dui-bi-qi-you-lie-shi/",
            "title": "npm、yarn、pnpm、cnpm对比其优劣势",
            "date_published": "2022-10-13T02:59:36.659Z",
            "content_html": "<span id=\"more\"></span>\n\n<h1 id=\"npm，yarn，cnpm，pnpm的介绍\"><a href=\"#npm，yarn，cnpm，pnpm的介绍\" class=\"headerlink\" title=\"npm，yarn，cnpm，pnpm的介绍\"></a>npm，yarn，cnpm，pnpm的介绍</h1><h2 id=\"npm\"><a href=\"#npm\" class=\"headerlink\" title=\"npm\"></a>npm</h2><p>首先说一下Node.js，简单的说 Node.js 就是运行在服务端的 JavaScript。node通过更改连接到服务器的方式，可以处理高并发任务。</p>\n<p>npm:   nodejs的包管理器，用于node插件管理（包括安装、卸载、管理依赖等）</p>\n<p>npm使用一个名为<code>package.json</code>的文件，用户可以通过<code>npm install --save</code>命令把项目里所有的依赖项保存在这个文件里。</p>\n<p>npm安装速度慢的一个重要原因：npm远程服务器在国外，必须首先遍历所有的项目依赖关系，然后再决定如何生成扁平化的node_modules结构。不过，npm有本地缓存，它保存了已经下载的每个版本的压缩包，缓存可以减少安装时间。</p>\n<h3 id=\"安装单个npm包：\"><a href=\"#安装单个npm包：\" class=\"headerlink\" title=\"安装单个npm包：\"></a>安装单个npm包：</h3><p><img src=\"https://img-blog.csdnimg.cn/44a32bd7c0ee45c59138fb827c5e4f2d.png\" alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-eUZR2oLH-1665560508928)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/c9054e9a-47b2-4488-b489-6d14c1dc0204/Untitled.png)]\"></p>\n<p>devDependencies：通常是开发的工具（eg:测试用的库），开发环境的依赖</p>\n<p>dependencies：与生产环境中应用程序相关的</p>\n<p>两者的区别在普通项目中，两者都安装，程序才能跑起来（因为devDependencies一般包含程序运行环境依赖）；纯node项目，只安装dependencies就可以运行项目了，而安装了 <code>devDependencies</code>后，就会让编辑器的 <code>eslint</code>检测插件开始工作，或者是可以用 <code>jest</code>进行单元测试：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/b78398b007e94877984683bb522f8fdb.png\" alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-eGIiHojD-1665560508929)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/6e8634cc-3f12-42f8-845f-325913194496/Untitled.png)]\"></p>\n<p>是真正意义上的开发环境与生产环境分离。</p>\n<h3 id=\"npm使用方法：\"><a href=\"#npm使用方法：\" class=\"headerlink\" title=\"npm使用方法：\"></a>npm使用方法：</h3><p>第一种：</p>\n<p>直接安装cnpm 安装淘宝提供的cnpm，并更改服务器地址为淘宝的国内地址， 命令：</p>\n<p><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code>，以后安装直接采用<code>cpm</code>替代<code>npm</code>， 例如原生npm命令为：<code>npm install uniq --save</code>，cnpm命令为：<code>cnpm install uniq --save</code></p>\n<p>第二种：</p>\n<p>替换npm仓库地址为淘宝镜像地址（推荐） 命令：<code>npm config set registry https://registry.npm.taobao.org</code>， 查看是否更改成功：<code>npm config get registry</code>，以后安装时，依然用npm命令，但是实际是从淘宝国内服务器下载的</p>\n<h2 id=\"yarn\"><a href=\"#yarn\" class=\"headerlink\" title=\"yarn\"></a>yarn</h2><p><a href=\"https://yarn.bootcss.com/docs/install/#windows-stable\">安装 | Yarn 中文文档 (bootcss.com)</a></p>\n<p>快速、可靠、安全的依赖管理工具。</p>\n<p>一开始是为了解决由于语义版本控制而导致npm安装的不确定的问题，每次安装都生成<code>yarn.lock</code>文件，<code>yarn.lock</code><br>文件还包含要安装的内容的校验和，以确保使用的库的版本相同。</p>\n<h3 id=\"yarn的改进：\"><a href=\"#yarn的改进：\" class=\"headerlink\" title=\"yarn的改进：\"></a>yarn的改进：</h3><p>运行速度得到了显著的提升</p>\n<p>像npm一样，yarn使用本地缓存。与npm不同的是，yarn无需互联网连接就能安装本地缓存的依赖项，它提供了<strong>离线模式</strong></p>\n<h3 id=\"yarn的workspace\"><a href=\"#yarn的workspace\" class=\"headerlink\" title=\"yarn的workspace\"></a>yarn的workspace</h3><p>Yarn Workspaces（工作区）是Yarn提供的<code>monorepo</code>的依赖管理机制，从Yarn 1.0开始默认支持，用于在代码仓库的根目录下管理多个package的依赖。</p>\n<p>Workspace 能更好的统一管理有多个项目的仓库，既可在每个项目下使用独立的 package.json 管理依赖，又可便利的享受一条 yarn命令安装或者升级所有依赖等。更重要的是可以使多个项目共享同一个 <code>node_modules</code>目录，提升开发效率和降低磁盘空间占用。</p>\n<h2 id=\"pnpm\"><a href=\"#pnpm\" class=\"headerlink\" title=\"pnpm\"></a>pnpm</h2><p><a href=\"https://pnpm.io/\">Fast, disk space efficient package manager | pnpm官网</a></p>\n<p>全称是 “Performant NPM”，即高性能的 npm。利用硬链接和符号链接来避免复制本地缓存源文件，继承了yarn的所有优点，包括离线模式和确定性安装</p>\n<h3 id=\"特点：速度快，节约磁盘空间，安全性高\"><a href=\"#特点：速度快，节约磁盘空间，安全性高\" class=\"headerlink\" title=\"特点：速度快，节约磁盘空间，安全性高\"></a>特点：速度快，节约磁盘空间，安全性高</h3><h3 id=\"高效利用磁盘空间\"><a href=\"#高效利用磁盘空间\" class=\"headerlink\" title=\"高效利用磁盘空间\"></a>高效利用磁盘空间</h3><p>内部基于内容寻址的文件系统存储磁盘上所有的文件：</p>\n<p>这个文件好处在于：</p>\n<p>1.不会重复安装同一个包。设想一下，假如公司的每个项目都用了 vue 全家桶，那么每个项目都需要安装 vue、vue-router、vuex、axios 等几乎相同的库，如果有 100 个项目，那就要重复安装 100 遍！！非常耗费磁盘空间。</p>\n<p>2.即使包的不同版本，pnpm也会极大程度的复用之前版本的代码。举个例子，比如 lodash 有 100 个文件，更新版本之后多了一个文件，那么磁盘当中并不会重新写入 101 个文件，而是保留原来的 100 个文件的 <code>hardlink</code>，仅仅写入那<code>一个新增的文件</code>。</p>\n<h3 id=\"支持-monorepo\"><a href=\"#支持-monorepo\" class=\"headerlink\" title=\"支持 monorepo\"></a>支持 monorepo</h3><p>对于多个项目的管理，一般用多个git仓库。但是monorepo的宗旨就是用一个git仓库管理多个子项目，所有子项目都存放在根目录的<code>packages</code>目录下，那么一个子项目就代表一个<code>package</code></p>\n<p>如果你之前没接触过 monorepo 的概念，建议仔细看看<a href=\"https://link.juejin.cn/?target=https://www.perforce.com/blog/vcs/what-monorepo\">这篇文章</a>以及开源的 monorepo 管理工具<a href=\"https://link.juejin.cn/?target=https://github.com/lerna/lerna%23readme\">lerna</a>，项目目录结构可以参考一下 <a href=\"https://link.juejin.cn/?target=https://github.com/babel/babel\">babel 仓库</a>。</p>\n<p>pnpm还保留了非扁平化的node_modules文件夹，避免了扁平化node_modules都带来的幻影依赖，依赖分身的问题。</p>\n<p>安装可以使用npm安装：npm i -g pnpm</p>\n<h3 id=\"pnpm-的-node-modules\"><a href=\"#pnpm-的-node-modules\" class=\"headerlink\" title=\"pnpm 的 node_modules\"></a>pnpm 的 node_modules</h3><p>与依赖提升和扁平化的 node_modules 不同，pnpm 引入了另一套依赖管理策略：<a href=\"https://cloud.tencent.com/developer/article/2047247\">内容寻址存储</a>。</p>\n<h2 id=\"cnpm\"><a href=\"#cnpm\" class=\"headerlink\" title=\"cnpm\"></a>cnpm</h2><p>与npm用法完全一致</p>\n<p>npm安装插件是从国外服务器下载，受网络影响大，可能出现异常。淘宝为我们搭建了一个国内的npm服务器cnpm，它目前是每隔10分钟将国外npm仓库的所有内容“搬运”回国内的服务器上，这样我们直接访问淘宝的国内服务器就可以了.</p>\n<ol>\n<li><p>cnpm 比 npm 快多了</p>\n</li>\n<li><p>cnpm 没有 package-lock.json</p>\n</li>\n</ol>\n<p><code>cnpm</code>最大的隐患：安装时不会产生 <code>package-lock.json</code>，并且项目中即使有 <code>package-lock.json</code>，<code>cnpm</code>也是不管不顾的，只读取 <code>package.json</code>。阿hi有一个因哈UN就是用的包不一定遵循<code>Semver</code>规范。</p>\n<ol start=\"3\">\n<li>有些依赖包用不了</li>\n</ol>\n<p>有些依赖包用 cnpm 安装就不能用，用 npm 安装就可以用，这个问题估计和 <code>cnpm</code>包的使用软链接的方式有关系（并不确定）。</p>\n<p>cnpm 和 npm 混用，导致包挂了，这个可以确定是 <code>cnpm</code>使用软链接的问题。所以，还是尽量不要混用吧。</p>\n<p>能用 npm 最好用 npm，公司内部的 <code>私有镜像源</code>也建议做成 <code>npm</code>，毕竟 <code>cnpm</code> 还是存在一些隐患。</p>\n<h2 id=\"扁平化的node-modules\"><a href=\"#扁平化的node-modules\" class=\"headerlink\" title=\"扁平化的node_modules\"></a>扁平化的node_modules</h2><pre><code>node_modules\n├── A\n│   └── node_modules\n│       └── foo\n└── B\n    └── node_modules\n        └── foo\n</code></pre>\n<p>最初，npm就简单通过依赖去递归安装包，A，B都依赖foo，那么就会有两份foo安装。为节省空间，采用了扁平化的node_modules。这样，foo会被提升到顶层，同一个包只会有一份。</p>\n<pre><code>node_modules\n├── A\n├── B\n└── foo\n</code></pre>\n<p>但是会带来的问题是引入混乱，扁平化结构可以直接引用foo，但实际上并没有直接指定依赖foo，而是有层级关系，导致了引入上的错乱。如果A,B都不依赖foo，包会报错。</p>\n<p>导致的问题：</p>\n<p>幻影依赖：项目代码引用的某个包没有直接定义在 <code>package.json</code>中，而是作为子依赖被某个包顺带安装了。代码里依赖幻影依赖的最大隐患是，对包的语义化控制不能穿透到其子包，也就是包 <code>a@patch</code>的改动可能意味着其子依赖包 <code>b@major</code><br>级别的 Break Change。（也就是说如果包改变了，那么被依赖的包就会破碎，出错）</p>\n<p>但还有一种更难以解决的幻影依赖问题，即用户在 Monorepo 项目根目录安装了某个包，这个包可能被某个子 Package 内的代码寻址到，要彻底解决这个问题，需要配合使用 Rush，在工程上通过依赖问题检测来彻底解决。</p>\n<h1 id=\"对比其优劣势\"><a href=\"#对比其优劣势\" class=\"headerlink\" title=\"对比其优劣势\"></a>对比其优劣势</h1><ul>\n<li>npm<ul>\n<li>node_modules扁平化结构</li>\n<li>支持workspace，大部分开发人员用npm也能很好的打包</li>\n<li>逐行安装（速度较慢）</li>\n<li>问题：幻影依赖，依赖分身</li>\n</ul>\n</li>\n<li>yarn<ul>\n<li>node_modules扁平化解构</li>\n<li>支持workspace，monorepo</li>\n<li>yarn主要为了解决语义版本控制而导致npm安装不确定的问题，由yarn.lock文件，不过npm也出了package-lock文件</li>\n<li>并行安装（速度较快）</li>\n<li>问题：幻影依赖，依赖分身</li>\n</ul>\n</li>\n<li>pnpm<ul>\n<li>pnpm采用内存寻址存储的方法，通过软硬链接引用依赖，实现node_modules非扁平化结构，</li>\n<li>支持workspace，monorepo，速度快，磁盘占用空间小（速度最快）</li>\n<li>通过内容寻址存储解决了幻影依赖，依赖分身的问题，安全性高。</li>\n<li>pnpm 的安装速度在大多数场景都比 npm 和 yarn 快 2 倍，节省的磁盘空间也更多。</li>\n<li>问题：<ul>\n<li>因为依赖源文件是安装在 store 中，调试依赖或 patch-package 给依赖打补丁也不太方便，可能会影响其他项目。</li>\n<li>由于 pnpm 创建的 node_modules 依赖软链接，因此在不支持软链接的环境中，无法使用 pnpm，比如 Electron 应用。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/d127a3607f604d40b532c12f8ca631a8.png\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": [
                "npm",
                "yarn",
                "pnpm",
                "Workspace",
                "Monorepo"
            ]
        },
        {
            "id": "http://example.com/2022/10/12/package.json-he-package-lock.json-xiang-jie/",
            "url": "http://example.com/2022/10/12/package.json-he-package-lock.json-xiang-jie/",
            "title": "package.json 和 package-lock.json详解",
            "date_published": "2022-10-12T12:27:14.217Z",
            "content_html": "<p>npm使用一个名为package.json的文件，用户可以通过npm install –save命令把项目里所有的依赖项保存在这个文件里。<br>npm遵循语义版本控制</p>\n<span id=\"more\"></span>\n<h1 id=\"语义版本控制是什么？\"><a href=\"#语义版本控制是什么？\" class=\"headerlink\" title=\"语义版本控制是什么？\"></a>语义版本控制是什么？</h1><p><code>1.5.4</code> 是版本号，其中</p>\n<ul>\n<li>1 是主版本号，代表的是不兼容的 API 修改（旧版本和新版本中有些方法不一样）</li>\n<li>5 是次版本号，代表的是向下兼容的功能性新增（旧版本和新版本中有些方法一样，但是新版本中又新增了这个方法）</li>\n<li>4 是修订号，代表的是向下兼容的问题修正（旧版本和新版本中有些方法一样，新版本中的方法修复了旧版本该方法部分场景下的bug）</li>\n</ul>\n<p><code>Semver</code> 规范：</p>\n<ul>\n<li>如果写入的是 <code>〜0.13.0</code>，则只更新补丁版本：即 0.13.1 可以，但 0.14.0 不可以。</li>\n<li>如果写入的是 <code>^0.13.0</code>，则要更新补丁版本和次版本：即 0.13.1、0.14.0、依此类推。</li>\n<li>如果写入的是 0.13.0，则始终使用确切的版本。</li>\n<li>还有一些不常用，就不展开介绍了  以vue脚手架为例：<br>  <img src=\"https://img-blog.csdnimg.cn/49831053514745b18bf930de2f1510c5.png\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<p>   脚手架相关的库都采用只更新补丁的模式，其他的包都选择更新次版本号的功能，从而引入一些向下兼容的最新特性或是优化功能。</p>\n<p>补丁版本或次版本的更改还是具有很大的不确定性，可能引入缺陷。</p>\n<h1 id=\"锁定版本与-package-lock-json\"><a href=\"#锁定版本与-package-lock-json\" class=\"headerlink\" title=\"锁定版本与 package-lock.json\"></a>锁定版本与 package-lock.json</h1><p>锁定实际安装的脚本，即使package.json中脚本不一样，在锁定脚本之后，将此文件留在了git仓库，就可以保证原始项目和新初始项目安装的依赖是一样的。</p>\n<p>如果想要更新，使用npm update（风险较大，建议升级某个特定的包），遵循semver标准，并且更新之后锁定版本为最新，依旧锁定，</p>\n<p>1.为啥 <code>package-lock.json</code> 文件比 <code>package.json</code> 包大那么多？</p>\n<p><code>package-lock.json</code>不仅锁定了依赖包，还把依赖包的依赖都用套娃的方式锁住，</p>\n<p>有了 <code>package-lock.json</code>后，<code>package.json</code>的版本更新规则就不生效了，会优先读取 <code>package-lock.json</code>中锁定的包版本进行安装，保证你的代码库能顺利运行，不会因为依赖包频繁更新而频繁引发问题。</p>\n<h1 id=\"package-json各个属性的含义\"><a href=\"#package-json各个属性的含义\" class=\"headerlink\" title=\"package.json各个属性的含义\"></a>package.json各个属性的含义</h1><p><a href=\"https://blog.csdn.net/qq_34703156/article/details/121401990\">(2条消息) package.json 最全详解_HURRICANE_FAST的博客-CSDN博客_package.json</a></p>\n<p>package.json 文件是一个 JSON 对象</p>\n<p>当搭建一个新项目时，脚手架就初始化好了一个package.json 文件</p>\n<p><img src=\"https://img-blog.csdnimg.cn/4adf67b0d668494f8d24a7f1541719dd.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"必须属性\"><a href=\"#必须属性\" class=\"headerlink\" title=\"必须属性\"></a>必须属性</h2><p>name 和 version，它们都是必须的，如果没有，就无法正常执行 npm install 命令。npm 规定 package.json 文件是由名称和版本号作为唯一标识符的。</p>\n<h2 id=\"描述信息\"><a href=\"#描述信息\" class=\"headerlink\" title=\"描述信息\"></a>描述信息</h2><p>homepage是项目的主页地址，是一个string</p>\n<p>repository表示代码存放仓库地址</p>\n<p>bugs表示提交问题的地址</p>\n<h2 id=\"依赖配置\"><a href=\"#依赖配置\" class=\"headerlink\" title=\"依赖配置\"></a>依赖配置</h2><p><code>peerDependencies</code> 字段就是用来供插件指定其所需要的主工具的版本。<code>需要注意</code>，从 <code>npm 3.0</code> 版开始，peerDependencies 不再会默认安装了。（比如 A 模块是 B 模块的插件。用户安装的 B 模块是 1.0 版本，但是 A 插件只能和 2.0 版本的 B 模块一起使用。这时，用户要是将 1.0 版本的 B 的实例传给 A，就会出现问题。因此，需要一种机制，在模板安装的时候提醒用户，如果 A 和 B 一起安装，那么 B 必须是 2.0 模块。）</p>\n<p><code>optionalDependencies</code>中放的包在找不到包或安装包失败时，npm仍然能够运行。</p>\n<p><code>bundledDependencies</code>配置项是一个数组，数组里可以指定一些模块，这些模块将在这个包发布时被一起打包。需要注意，这个字段数组中的值必须是在 dependencies, devDependencies 两个里面声明过的包才行。</p>\n<p><code>engines</code> 字段中说明具体的版本号”engines”: {“node”: “&gt;=8.10.3 &lt;12.13.0”,”npm”: “&gt;=6.9.0”}。需要注意，engines 只是起一个说明的作用，即使用户安装的版本不符合要求，也不影响依赖包的安装。</p>\n<h2 id=\"脚本配置\"><a href=\"#脚本配置\" class=\"headerlink\" title=\"脚本配置\"></a>脚本配置</h2><p><code>scripts：</code>内置的脚本入口。这些脚本是命令行应用程序。可以通过调用 npm run XXX 或 yarn XXX 来运行它们，其中 XXX 是命令的名称。例如：npm run dev。我们可以为命令使用任何的名称，脚本也可以是任何操作。</p>\n<p><code>config</code> 字段用来配置 scripts 运行时的配置参数</p>\n<h2 id=\"文件-amp-目录\"><a href=\"#文件-amp-目录\" class=\"headerlink\" title=\"文件&amp;目录\"></a>文件&amp;目录</h2><p><code>main</code> 字段用来指定加载的入口文件，在 browser 和 Node 环境中都可以使用。如果我们将项目发布为 npm 包，那么当使用 require 导入 npm 包时，返回的就是 main 字段所列出的文件的 module.exports 属性。如果不指定该字段，默认是项目根目录下的 index.js。如果没找到，就会报错。</p>\n<p><code>browser</code> 字段可以定义 npm 包在 browser 环境下的入口文件。如果 npm 包只在 web 端使用，并且严禁在 server 端使用，使用 browser 来定义入口文件。</p>\n<p><code>module</code> 字段可以定义 npm 包的 ESM 规范的入口文件。需要注意，.js 文件是使用 commonJS 规范的语法 (require(‘xxx’))，.mjs 是用 ESM 规范的语法 (import ‘xxx’)。</p>\n<p><code>bin</code> 字段用来指定各个内部命令对应的可执行文件的位置。</p>\n<p>“bin”: {<br>        “someTool”: “./bin/someTool.js”                 //可执行文件的简称：可执行文件的路径<br>}<br>在使用到地址的地方可以直接使用简称</p>\n<p><code>directories</code> 字段用来规范项目的目录，这个属性实际上没有什么实际的作用，未来待定</p>\n<h2 id=\"发布配置\"><a href=\"#发布配置\" class=\"headerlink\" title=\"发布配置\"></a>发布配置</h2><p><code>private</code> 字段Boolean值，可以防止我们意外地将私有库发布到 npm 服务器。</p>\n<p><code>preferGlobal</code> 字段表示提示，当用户不把该模块安装为全局模块时，如果设置为 true 就会显示警告。</p>\n<p><code>publishConfig</code> 配置会在模块发布时生效，用于设置发布时一些配置项的集合。</p>\n<p>通常情况下，publishConfig 会配合 private 来使用，如果只想让模块发布到特定 npm 仓库</p>\n<p><code>os</code> 字段可以让我们设置该 npm 包可以在什么操作系统使用，不能再什么操作系统使用。”os” [“linux”]</p>\n<p><code>CPU</code> 可以更准确的限制用户的安装环境。</p>\n<p>“cpu” [“x64”, “AMD64”]   // 适用的cpu<br>“cpu” [“!arm”, “!mips”]  // 禁用的cpu</p>\n<p><code>license</code> 字段用于指定软件的开源协议，开源协议表述了其他人获得代码后拥有的权利。常见协议如下：</p>\n<ul>\n<li>MIT ：只要用户在项目副本中包含了版权声明和许可声明，他们就可以拿你的代码做任何想做的事情，你也无需承担任何责任。</li>\n<li>Apache ：类似于 MIT ，同时还包含了贡献者向用户提供专利授权相关的条款。</li>\n<li>GPL ：修改项目代码的用户再次分发源码或二进制代码时，必须公布他的相关修改。</li>\n</ul>\n<h2 id=\"第三方配置\"><a href=\"#第三方配置\" class=\"headerlink\" title=\"第三方配置\"></a>第三方配置</h2><p>详见上方链接文档</p>\n",
            "tags": [
                "npm"
            ]
        },
        {
            "id": "http://example.com/2022/10/12/vue3-mian-bao-xie-dao-hang-de-zhi-zuo/",
            "url": "http://example.com/2022/10/12/vue3-mian-bao-xie-dao-hang-de-zhi-zuo/",
            "title": "vue3面包屑导航的制作",
            "date_published": "2022-10-12T07:22:11.546Z",
            "content_html": "<p>如图所示：</p>\n<span id=\"more\"></span>\n<p><img src=\"https://img-blog.csdnimg.cn/677224bc09434b5abe12b5e5a83ddbb7.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"首先有固定的路由表\"><a href=\"#首先有固定的路由表\" class=\"headerlink\" title=\"首先有固定的路由表\"></a>首先有固定的路由表</h2><pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> routes<span class=\"token punctuation\">:</span>Array<span class=\"token operator\">&lt;</span>RouteRecordRaw<span class=\"token operator\">&gt;</span> <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>\n <span class=\"token punctuation\">{</span>\n            path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/dashboard'</span><span class=\"token punctuation\">,</span>\n            name<span class=\"token punctuation\">:</span><span class=\"token string\">'dashboard'</span><span class=\"token punctuation\">,</span>\n            meta<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                title<span class=\"token punctuation\">:</span><span class=\"token string\">'首页'</span><span class=\"token punctuation\">,</span>\n                icon<span class=\"token punctuation\">:</span> <span class=\"token string\">'Watch'</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n            path<span class=\"token punctuation\">:</span><span class=\"token string\">'/system'</span><span class=\"token punctuation\">,</span><span class=\"token comment\" spellcheck=\"true\">//系统管理就是一个空的路径，点击系统管理不会跳转任何页面</span>\n            name<span class=\"token punctuation\">:</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">,</span>\n            meta<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                title<span class=\"token punctuation\">:</span> <span class=\"token string\">'系统管理'</span><span class=\"token punctuation\">,</span>\n                icon<span class=\"token punctuation\">:</span> <span class=\"token string\">'Menu'</span><span class=\"token punctuation\">,</span>\n                roles<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'sys:manage'</span><span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token punctuation\">{</span>\n                    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/department'</span><span class=\"token punctuation\">,</span>\n                    name<span class=\"token punctuation\">:</span><span class=\"token string\">'department'</span><span class=\"token punctuation\">,</span>\n                    meta<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                        title<span class=\"token punctuation\">:</span><span class=\"token string\">'机构管理'</span><span class=\"token punctuation\">,</span>\n                        icon<span class=\"token punctuation\">:</span> <span class=\"token string\">'ZoomOut'</span><span class=\"token punctuation\">,</span>\n                        roles<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'sys:dept'</span><span class=\"token punctuation\">]</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">{</span>\n                    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/userList'</span><span class=\"token punctuation\">,</span>\n                    name<span class=\"token punctuation\">:</span><span class=\"token string\">'userList'</span><span class=\"token punctuation\">,</span>\n                    meta<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                        title<span class=\"token punctuation\">:</span><span class=\"token string\">'用户管理'</span><span class=\"token punctuation\">,</span>\n                        icon<span class=\"token punctuation\">:</span> <span class=\"token string\">'ZoomOut'</span><span class=\"token punctuation\">,</span>\n                        roles<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'sys:user'</span><span class=\"token punctuation\">]</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">{</span>\n                    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/roleList'</span><span class=\"token punctuation\">,</span>\n                    name<span class=\"token punctuation\">:</span><span class=\"token string\">'roleList'</span><span class=\"token punctuation\">,</span>\n                    meta<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                        title<span class=\"token punctuation\">:</span><span class=\"token string\">'角色管理'</span><span class=\"token punctuation\">,</span>\n                        icon<span class=\"token punctuation\">:</span> <span class=\"token string\">'ZoomOut'</span><span class=\"token punctuation\">,</span>\n                        roles<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'sys:role'</span><span class=\"token punctuation\">]</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">{</span>\n                    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/menuList'</span><span class=\"token punctuation\">,</span>\n                    name<span class=\"token punctuation\">:</span><span class=\"token string\">'menuList'</span><span class=\"token punctuation\">,</span>\n                    meta<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                        title<span class=\"token punctuation\">:</span><span class=\"token string\">'权限管理'</span><span class=\"token punctuation\">,</span>\n                        icon<span class=\"token punctuation\">:</span> <span class=\"token string\">'ZoomOut'</span><span class=\"token punctuation\">,</span>\n                        roles<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'sys:menu'</span><span class=\"token punctuation\">]</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n            path<span class=\"token punctuation\">:</span><span class=\"token string\">'/goods'</span><span class=\"token punctuation\">,</span>\n            name<span class=\"token punctuation\">:</span><span class=\"token string\">'goods'</span><span class=\"token punctuation\">,</span>\n            meta<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                title<span class=\"token punctuation\">:</span> <span class=\"token string\">'商品管理'</span><span class=\"token punctuation\">,</span>\n                icon<span class=\"token punctuation\">:</span> <span class=\"token string\">'ZoomOut'</span><span class=\"token punctuation\">,</span>\n                roles<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'sys:goods'</span><span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token punctuation\">{</span>\n                    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/goodCategory'</span><span class=\"token punctuation\">,</span>\n                    name<span class=\"token punctuation\">:</span><span class=\"token string\">'goodCategory'</span><span class=\"token punctuation\">,</span>\n                    meta<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                        title<span class=\"token punctuation\">:</span><span class=\"token string\">'商品列表'</span><span class=\"token punctuation\">,</span>\n                        icon<span class=\"token punctuation\">:</span> <span class=\"token string\">'ZoomOut'</span><span class=\"token punctuation\">,</span>\n                        roles<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'sys:goodCategory'</span><span class=\"token punctuation\">]</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"route-matched\"><a href=\"#route-matched\" class=\"headerlink\" title=\"route.matched\"></a>route.matched</h2><p>面包屑的思路就是需要得到访问路径的信息，比如title，可以得到一个数组，到时候渲染到面包屑标签里</p>\n<p>需要用到route.matched，得到当前路径的匹配路径：比如点击商品管理，路径就是/goods/goodCategory。<br>matched，顾名思义就是匹配，/goods/goodCategory匹配到的路径就是/goods,/goodCategory：<br><img src=\"https://img-blog.csdnimg.cn/d0eba6511d3344a58a8790ff2021c35e.png\" alt=\"在这里插入图片描述\"><br>匹配到的路径都是在route里声明过的</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\" spellcheck=\"true\">//利用route.matched可以得到单个匹配的路径</span>\n<span class=\"token comment\" spellcheck=\"true\">//路径会发生改变，所以要用watch进行监听</span>\n\n<span class=\"token keyword\">const</span> getBreadCom <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> mached <span class=\"token operator\">=</span> route<span class=\"token punctuation\">.</span>matched<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>item <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> item<span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>route<span class=\"token punctuation\">.</span>matched<span class=\"token punctuation\">,</span>mached<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\" spellcheck=\"true\">// 第一个路径如果不是首页，需要在匹配路径前面拼接一个首页</span>\n    <span class=\"token keyword\">const</span> first <span class=\"token operator\">=</span> mached<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">.</span>path <span class=\"token operator\">!=</span> <span class=\"token string\">\"/dashboard\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        mached <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/dashboard'</span><span class=\"token punctuation\">,</span>meta<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">'首页'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>mached<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n   \n    <span class=\"token function\">getBreadCom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\" spellcheck=\"true\">// 监听路径的改变,如果发生变化了，执行方法</span>\n    <span class=\"token function\">watch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span>route<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">getBreadCom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h2><p>因为 当被点击后，需要把 to （目标路由的链接，类型都是RouteLocationRaw），传到router.push()里面<br>所以需要对 mached 进行类型的转换</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"> <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ref<span class=\"token punctuation\">,</span>watch<span class=\"token punctuation\">,</span>Ref <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useRoute<span class=\"token punctuation\">,</span>RouteLocationMatched <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-router'</span>\n   <span class=\"token keyword\">const</span> route <span class=\"token operator\">=</span> <span class=\"token function\">useRoute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\" spellcheck=\"true\">//    定义导航数据,设置类型，否则赋值会报错</span>\n    <span class=\"token keyword\">const</span> tabs<span class=\"token punctuation\">:</span>Ref<span class=\"token operator\">&lt;</span>RouteLocationMatched<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&gt;</span> <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token keyword\">const</span> getBreadCom <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> mached <span class=\"token operator\">=</span> route<span class=\"token punctuation\">.</span>matched<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>item <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> item<span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>route<span class=\"token punctuation\">.</span>matched<span class=\"token punctuation\">,</span>mached<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\" spellcheck=\"true\">// 第一个路径如果不是首页，需要在匹配路径前面拼接一个首页</span>\n    <span class=\"token keyword\">const</span> first <span class=\"token operator\">=</span> mached<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">.</span>path <span class=\"token operator\">!=</span> <span class=\"token string\">\"/dashboard\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        mached <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/dashboard'</span><span class=\"token punctuation\">,</span>meta<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">'首页'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>mached<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\" spellcheck=\"true\">//设置面包屑的数据</span>\n    tabs<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> mached\n   <span class=\"token punctuation\">}</span>\n   \n    <span class=\"token function\">getBreadCom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\" spellcheck=\"true\">// 监听路径的改变,如果发生变化了，执行方法</span>\n    <span class=\"token function\">watch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span>route<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">getBreadCom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>最后写在面包屑标签里</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>breadcrumb separator<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>breadcrumb<span class=\"token operator\">-</span>item v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"item in tabs\"</span> <span class=\"token punctuation\">:</span>to<span class=\"token operator\">=</span><span class=\"token string\">\"item.path\"</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>breadcrumb<span class=\"token operator\">-</span>item<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>breadcrumb<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "vue3",
                "TypeScript"
            ]
        },
        {
            "id": "http://example.com/2022/10/12/element-plus-dong-tai-yin-ru-tu-biao/",
            "url": "http://example.com/2022/10/12/element-plus-dong-tai-yin-ru-tu-biao/",
            "title": "element plus动态引入图标",
            "date_published": "2022-10-12T07:20:31.911Z",
            "content_html": "<span id=\"more\"></span>\n<ol>\n<li>在main.ts引入</li>\n</ol>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> Icons <span class=\"token keyword\">from</span> <span class=\"token string\">'@element-plus/icons-vue'</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>ElementPlus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//方式一，用component组件</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// 注册全局组件（组件名，组件实现）</span>\n    <span class=\"token comment\" spellcheck=\"true\">// Icons[key as keyof typeof Icons]：key作为与Icons对象的键之一匹配的字符串,Icons对象取值与key匹配的值</span>\n    <span class=\"token comment\" spellcheck=\"true\">// key输出是各个icon名</span>\n    app<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span>Icons<span class=\"token punctuation\">[</span>key <span class=\"token keyword\">as</span> keyof <span class=\"token keyword\">typeof</span> Icons<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//方式二，用icon标签</span>\n<span class=\"token keyword\">const</span> Icon <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span>icon<span class=\"token punctuation\">:</span>string<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>icon<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span>\n     <span class=\"token comment\" spellcheck=\"true\">// 创建icon标签</span>\n     <span class=\"token keyword\">return</span> <span class=\"token function\">createVNode</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">[</span>icon <span class=\"token keyword\">as</span> keyof <span class=\"token keyword\">typeof</span> Icons<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">}</span>\n app<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Icon'</span><span class=\"token punctuation\">,</span>Icon<span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"3\">\n<li>在组件中使用</li>\n</ol>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 动态组件的使用方式 <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n        \n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 方式一 <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>component <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"icons\"</span> <span class=\"token punctuation\">:</span>is<span class=\"token operator\">=</span><span class=\"token string\">\"menu.meta.icon\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 方式二 <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>Icon <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"icons\"</span> <span class=\"token punctuation\">:</span>icon<span class=\"token operator\">=</span><span class=\"token string\">\"menu.mata.icon\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Icon<span class=\"token operator\">&gt;</span>\n        \n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "vue3",
                "TypeScript",
                "element plus"
            ]
        },
        {
            "id": "http://example.com/2022/10/12/vue3-ts-tong-guo-lodash-shi-xian-fang-dou-jie-liu/",
            "url": "http://example.com/2022/10/12/vue3-ts-tong-guo-lodash-shi-xian-fang-dou-jie-liu/",
            "title": "vue3+ts通过lodash实现防抖节流",
            "date_published": "2022-10-12T07:18:01.011Z",
            "content_html": "<span id=\"more\"></span>\n<p>安装lodash</p>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">npm i <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev @types<span class=\"token operator\">/</span>lodash\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在组件中引入lodash</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>防抖</strong></p>\n<p>_.debounce(func, [wait=0], [options=])     函数在延迟几毫秒之后才执行，也就是停止改变几秒后执行</p>\n<p>参数</p>\n<ol>\n<li>func (Function): 要防抖动的函数。</li>\n<li>[wait=0] (number): 需要延迟的毫秒数。</li>\n<li>[options=] (Object): 选项对象。</li>\n<li>[options.leading=false] (boolean): 指定在延迟开始前调用。</li>\n<li>[options.maxWait] (number): 设置 func 允许被延迟的最大值。</li>\n<li>[options.trailing=true] (boolean): 指定在延迟结束后调用。</li>\n</ol>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script setup lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">//防抖的函数应该是click事件</span>\n    <span class=\"token keyword\">const</span> fangdou <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span>click<span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      leading<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\" spellcheck=\"true\">// 延长开始后调用</span>\n      trailing<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>  <span class=\"token comment\" spellcheck=\"true\">// 延长结束前调用</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\" spellcheck=\"true\">//响应点击</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\" spellcheck=\"true\">//移除组件时，取消防抖</span>\n    <span class=\"token function\">onUnmounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{</span>\n      fangdou<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> \n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"fangdou\"</span><span class=\"token operator\">&gt;</span>fangdou<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>节流</strong></p>\n<p>_.throttle(func, [wait=0], [options=])  第一次会立即执行一次，然后等到过了毫秒数才会执行，以一定的频率后续处理</p>\n<p>参数</p>\n<ol>\n<li>func (Function): 要节流的函数。</li>\n<li>[wait=0] (number): 需要节流的毫秒。</li>\n<li>[options=] (Object): 选项对象。</li>\n<li>[options.leading=true] (boolean): 指定调用在节流开始前。</li>\n<li>[options.trailing=true] (boolean): 指定调用在节流结束后。</li>\n</ol>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script setup lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">&gt;</span>\n   <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span>\n\n   <span class=\"token keyword\">const</span> throttle <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{</span>\n     console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'I get fired every two seconds!'</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token number\">2000</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>\n     leading<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n     trailing<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n   <span class=\"token comment\" spellcheck=\"true\">//移除组件时，取消节流</span>\n   <span class=\"token function\">onUnmounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{</span>\n     throttle<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> \n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n   <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"throttle\"</span><span class=\"token operator\">&gt;</span>jieliu<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "vue3",
                "TypeScript"
            ]
        },
        {
            "id": "http://example.com/2022/10/12/yi-dong-duan-1px-wen-ti-jie-jue-fang-an/",
            "url": "http://example.com/2022/10/12/yi-dong-duan-1px-wen-ti-jie-jue-fang-an/",
            "title": "移动端1px问题解决方案",
            "date_published": "2022-10-12T07:02:03.340Z",
            "content_html": "<h1 id=\"产生的原因：\"><a href=\"#产生的原因：\" class=\"headerlink\" title=\"产生的原因：\"></a>产生的原因：</h1><p>写代码时一般使用设备独立像素来对页面布局。而在设备像素比大于1的屏幕上，我们写的1px实际上是被多个物理像素渲染，这就会出现1px在有些屏幕上看起来很粗的现象：</p>\n<span id=\"more\"></span>\n<h1 id=\"解决方法：\"><a href=\"#解决方法：\" class=\"headerlink\" title=\"解决方法：\"></a>解决方法：</h1><h2 id=\"小数值px\"><a href=\"#小数值px\" class=\"headerlink\" title=\"小数值px\"></a>小数值px</h2><p>设备像素比devicePixelRadio=2=物理像素/css像素=1px/0.5px，物理像素为1px，设置设备像素比=2，css像素设为0.5px，详情如下：<br><img src=\"https://img-blog.csdnimg.cn/6d8569f7209c489c920aea511361e6b1.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/e769e277e5044965b59ee54e78308db2.png\" alt=\"在这里插入图片描述\"></p>\n<pre><code>缺点：\n        兼容性差，目前之余IOS8+才支持，在IOS7及其以下、安卓系统都是显示0px。\n</code></pre>\n<h2 id=\"background-image，多背景渐变\"><a href=\"#background-image，多背景渐变\" class=\"headerlink\" title=\"background-image，多背景渐变\"></a>background-image，多背景渐变</h2><pre><code>设置1px的渐变背景\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/91d9655f372740bfbd77901cef44b1b9.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/df95fd164b0540d9b9808ca5be14e302.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"CSS3-box-shadow\"><a href=\"#CSS3-box-shadow\" class=\"headerlink\" title=\"CSS3,box-shadow\"></a>CSS3,box-shadow</h2><pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.shadow</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">-wedit-box-shadow</span><span class=\"token punctuation\">:</span><span class=\"token number\">0</span> <span class=\"token number\">1</span>px <span class=\"token number\">1</span>px -<span class=\"token number\">1</span>px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span>, <span class=\"token number\">0</span>, <span class=\"token number\">0</span> ,<span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span>px <span class=\"token number\">1</span>px -<span class=\"token number\">1</span>px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span>, <span class=\"token number\">0</span>, <span class=\"token number\">0</span> ,<span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/5a790dd6e9de4eceb0d3ae0086cb3d1e.png\" alt=\"在这里插入图片描述\"></p>\n<pre><code>缺点：\n    颜色不好配置\n</code></pre>\n<h2 id=\"viewport与rem结合\"><a href=\"#viewport与rem结合\" class=\"headerlink\" title=\"viewport与rem结合\"></a>viewport与rem结合</h2><pre><code>当设备像素比=2，（中和一下，使物理像素=设备独立像素）\n</code></pre>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"initial-scale=0.5,maximum-scale=0.5,minimum-scale=0.5,user-scalable=no\"</span><span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/cb7c14e4c2a442398fbdba43273879b2.png\" alt=\"在这里插入图片描述\"></p>\n<p>当设备像素比=3，将页面缩放1/3倍，</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"initial-scale=0.3333333333333333, maximum-scale=0.3333333333333333, minimum-scale=0.3333333333333333, user-scalable=no\"</span><span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>任意设备像素比</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"> <span class=\"token keyword\">const</span> scale <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> window<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> viewport <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'meta[name=\"viewport\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>viewport<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                viewport <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'meta'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                viewport<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'viewport'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                window<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>viewport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            viewport<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'width=device-width,user-scalable=no,initial-scale='</span> <span class=\"token operator\">+</span> scale <span class=\"token operator\">+</span> <span class=\"token string\">',maximum-scale='</span> <span class=\"token operator\">+</span> scale <span class=\"token operator\">+</span> <span class=\"token string\">',minimum-scale='</span> <span class=\"token operator\">+</span> scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>意味着所有页面都需要用物理像素写，不现实，可以用flexible，vm,vh来帮助适配</p>\n<h2 id=\"before，-after，transform（建议使用）\"><a href=\"#before，-after，transform（建议使用）\" class=\"headerlink\" title=\":before，:after，transform（建议使用）\"></a>:before，:after，transform（建议使用）</h2><pre><code>原理：先把原来的border去掉，然后用:before,:after重做border，并 transform 的 scale 缩小一半，原先的元素相对定位，新做的 border 绝对定位。单条border样式：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/51c044d048ca471cbba1ee191a079602.png)\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/b22f3b580ef24d9b8bdb4dd16c3c543f.png\" alt=\"在这里插入图片描述\"></p>\n<p>四条border样式：<br><img src=\"https://img-blog.csdnimg.cn/7018f0ec3639450bade5c58b41591e8a.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/0e730e901fdc468189611efcc30d72ab.png\" alt=\"在这里插入图片描述\"></p>\n<pre><code>优点：\n        所有场景都能满足\n        支持圆角\n缺点：\n        对于已经使用伪类的元素，可能需要多层嵌套\n</code></pre>\n<h2 id=\"svg（推荐使用）\"><a href=\"#svg（推荐使用）\" class=\"headerlink\" title=\"svg（推荐使用）\"></a>svg（推荐使用）</h2><pre><code>借助PostCSS的postcss-write-svg我们能直接使用border-image和background-image创建svg的1px边框\n![在这里插入图片描述](https://img-blog.csdnimg.cn/634a5b45e770438d8402f98ccf3c3546.png)\n</code></pre>\n<h2 id=\"border-image\"><a href=\"#border-image\" class=\"headerlink\" title=\"border-image\"></a>border-image</h2><p>准备一张符合要求的border-image<br>    <img src=\"https://img-blog.csdnimg.cn/183e0b5cb20540e8ad0a6885c5c186f1.png\" alt=\"在这里插入图片描述\"></p>\n<p>通常手机端的页面设计稿都是放大一倍的，如：为适应iphone retina，设计稿会设计成750*1334的分辨率，图片按照2倍大小切出来，在手机端看着就不会虚化，非常清晰。 同样，在使用border-image时，将border设计为物理1px，如下：</p>\n<pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.border-image-1px</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span>px <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-image</span><span class=\"token punctuation\">:</span><span class=\"token url\">url(linenew.png)</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span> stretch<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上文是把border设置在边框的底部，所以使用的图片是2px高，上部的1px颜色为透明，下部的1px使用视觉规定的border的颜色。<br>如果边框底部和顶部同时需要border，可以使用下面的border-image：<br><img src=\"https://img-blog.csdnimg.cn/5af4d4c0fea343169c710f59ffebc536.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.border-image-1px</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>px <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">-wekit-border-image</span><span class=\"token punctuation\">:</span><span class=\"token url\">url(linenew.png)</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span> stretch<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-image</span><span class=\"token punctuation\">:</span><span class=\"token url\">url(linenew.png)</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span> stretch<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在非视网膜屏上会出现border显示不出来的情况，需要做一下兼容：</p>\n<pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.border-image-1px</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>px solid <span class=\"token hexcode\">#666</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> only screen and <span class=\"token punctuation\">(</span><span class=\"token property\">-wekit-min-device-pixel-radio</span><span class=\"token punctuation\">:</span>2<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token selector\"><span class=\"token class\">.border-image-1px</span> </span><span class=\"token punctuation\">{</span>\n        <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">border-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span>px <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token property\">-wekit-border-image</span><span class=\"token punctuation\">:</span><span class=\"token url\">url(linenew.png)</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span> stretch<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">border-image</span><span class=\"token punctuation\">:</span><span class=\"token url\">url(linenew.png)</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span> stretch<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre><code>优点：\n    可以设置单条,多条边框，没有性能瓶颈的问题\n缺点：\n    修改颜色麻烦, 需要替换图片；圆角需要特殊处理，并且边缘会模糊\n</code></pre>\n<h2 id=\"background-image\"><a href=\"#background-image\" class=\"headerlink\" title=\"background-image\"></a>background-image</h2><pre><code>与上类似，只不过将border模拟在背景上\n</code></pre>\n<pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.background-image-1px</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token url\">url(linenew.png)</span> repeat-x left bottom<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">-wekit-background-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100%</span> <span class=\"token number\">1</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100%</span> <span class=\"token number\">1</span>px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre><code>优点：\n    可以设置单条,多条边框，没有性能瓶颈的问题。\n缺点：\n    修改颜色麻烦, 需要替换图片；圆角需要特殊处理，并且边缘会模糊。\n</code></pre>\n",
            "tags": [
                "javascript",
                "移动端",
                "css"
            ]
        },
        {
            "id": "http://example.com/2022/10/12/js-zhong-lei-yu-gou-zao-han-shu/",
            "url": "http://example.com/2022/10/12/js-zhong-lei-yu-gou-zao-han-shu/",
            "title": "js中类与构造函数",
            "date_published": "2022-10-12T06:59:44.832Z",
            "content_html": "<h1 id=\"js中类的概念：\"><a href=\"#js中类的概念：\" class=\"headerlink\" title=\"js中类的概念：\"></a>js中类的概念：</h1><p>把具有共同性质的事务归于一类，得到一个抽象概念，就是类。<br>类的数据类型就是函数，类本身指向构造函数</p>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Point</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\" spellcheck=\"true\">//...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">typeof</span> Point  <span class=\"token comment\" spellcheck=\"true\">//\"function\"</span>\nPoint <span class=\"token operator\">===</span> Point<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>constructor\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"类的写法\"><a href=\"#类的写法\" class=\"headerlink\" title=\"类的写法\"></a>类的写法</h1><pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Point</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'('</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> <span class=\"token string\">', '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> <span class=\"token string\">')'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这种新的写法，本质上与下面代码写法是一样的<br><img src=\"https://img-blog.csdnimg.cn/3f82b28a0d614b918a4ad4a0c1445d46.png\" alt=\"在这里插入图片描述\"><br>构造函数的prototype属性，在es6的类中依然存在，类中的所有方法都是定义在prototype属性上的</p>\n<h1 id=\"使用类的原因：\"><a href=\"#使用类的原因：\" class=\"headerlink\" title=\"使用类的原因：\"></a>使用类的原因：</h1><p>类相当于一个语法糖，让对象原型的写法更加清晰，更像面向对象的编程</p>\n<h1 id=\"使用构造函数初始化对象的原理\"><a href=\"#使用构造函数初始化对象的原理\" class=\"headerlink\" title=\"使用构造函数初始化对象的原理\"></a>使用构造函数初始化对象的原理</h1><h2 id=\"理解new操作符：\"><a href=\"#理解new操作符：\" class=\"headerlink\" title=\"理解new操作符：\"></a>理解new操作符：</h2><p> function   F(){}<br> new F();<br>过程：<br>创建一个空对象，作为将要返回的实例对象<br>将空对象的原型指向构造函数的prototype属性<br>将空对象赋值给构造函数内部的this关键字，也就是this会指向实例对象<br>开始执行函数内部代码</p>\n<h2 id=\"根据new操作符理解constructor初始化对象的原理：\"><a href=\"#根据new操作符理解constructor初始化对象的原理：\" class=\"headerlink\" title=\"根据new操作符理解constructor初始化对象的原理：\"></a>根据new操作符理解constructor初始化对象的原理：</h2><p> 直接对类使用new命令，跟构造函数的用法一致。<br> 在类的实例上调用方法，实际上就是调用原型上的方法（根据上面function声明的构造函数的写法可知）。所以在实例上调用constructor 方法，实际上就是调用原型上的constructor 方法：</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nb<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">===</span> B<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>constructor <span class=\"token comment\" spellcheck=\"true\">// true</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>new操作符 最主要的是将this从原始函数指向实例对象，而实例对象的constructor 是等于类的原型上的constructor 。比如上面代码，此时B原型上的constructor的this，就指向实例对象b<br>所以构造方法的this关键字则代表实例对象。</p>\n<p>参考链接：<br><a href=\"https://blog.csdn.net/weixin_34384915/article/details/91374594?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165119766216782395378874%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=165119766216782395378874&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-24-91374594.142%5Ev9%5Econtrol,157%5Ev4%5Econtrol&amp;utm_term=%E7%B1%BB%E7%9A%84%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0&amp;spm=1018.2226.3001.4187\">https://blog.csdn.net/weixin</a></p>\n",
            "tags": [
                "javascript"
            ]
        },
        {
            "id": "http://example.com/2022/10/12/element-ui-notification-tong-zhi-wen-zi-huan-xing/",
            "url": "http://example.com/2022/10/12/element-ui-notification-tong-zhi-wen-zi-huan-xing/",
            "title": "element-ui Notification 通知文字换行",
            "date_published": "2022-10-12T06:56:12.321Z",
            "content_html": "<p>换行代码如下：</p>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> success<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> fail<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> o <span class=\"token keyword\">in</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>ToSuccess<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    success <span class=\"token operator\">+</span><span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>ToSuccess<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> p <span class=\"token keyword\">in</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>ToFailure<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    fail <span class=\"token operator\">+</span><span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>ToFailure<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'转入成功的人：'</span> <span class=\"token operator\">+</span> success<span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'转入失败的人：'</span> <span class=\"token operator\">+</span> fail<span class=\"token punctuation\">]</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> newData <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">const</span> h <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$createElement\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    newData<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">null</span> <span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>     \n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    title<span class=\"token punctuation\">:</span> <span class=\"token string\">'提示'</span><span class=\"token punctuation\">,</span>\n    message<span class=\"token punctuation\">:</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">,</span>newData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    duration<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>使用vue的$<strong>createElement</strong>方法，方法的参数和含义用法如下：</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">class</span>：‘name’<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n<span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'some messages...some messages...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'some messages...some messages...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>第一个参数：标签<br>第二个参数：标签属性，比如class，style等<br>第三个参数：标签的内容，（也可以生成多个标签，或者一个标签的多个值）<br><img src=\"https://img-blog.csdnimg.cn/b2f7d964fd0d456eb643c07e0dadd53c.png\" alt=\"在这里插入图片描述\"></p>\n<p>参考链接：<br><a href=\"https://www.jianshu.com/p/109c8e0077c0\">https://www.jianshu.com/p/109c8e0077c0</a><br><a href=\"https://blog.csdn.net/xiaoma19941027/article/details/107769723\">https://blog.csdn.net/xiaoma19941027/article/details/107769723</a></p>\n",
            "tags": [
                "element ui",
                "vue",
                "javascript"
            ]
        },
        {
            "id": "http://example.com/2022/10/12/el-upload-shang-chuan-wen-jian-shi-xian-shi-pin-shang-chuan/",
            "url": "http://example.com/2022/10/12/el-upload-shang-chuan-wen-jian-shi-xian-shi-pin-shang-chuan/",
            "title": "el-upload上传文件实现视频上传",
            "date_published": "2022-10-12T06:51:00.695Z",
            "content_html": "<p>如图所示：</p>\n<span id=\"more\"></span>\n<p><img src=\"https://img-blog.csdnimg.cn/c77982cb3a6e43c78db778b0fe70362c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAcXFfNDU0ODk2NjU=,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>上传成功后，下面的滚动条和文件名消失</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"> <span class=\"token operator\">&lt;</span>el-form-item label<span class=\"token operator\">=</span><span class=\"token string\">\"上传视频\"</span> prop<span class=\"token operator\">=</span><span class=\"token string\">\"videoPath\"</span> :required<span class=\"token operator\">=</span><span class=\"token string\">\"videoTo\"</span><span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span>el-upload\n            ref<span class=\"token operator\">=</span><span class=\"token string\">\"video\"</span>\n            class<span class=\"token operator\">=</span><span class=\"token string\">\"upload-demo\"</span>\n            v-model<span class=\"token operator\">=</span><span class=\"token string\">\"form.videoPath\"</span>\n            drag\n            action<span class=\"token operator\">=</span><span class=\"token string\">\"/api/EToolFile\"</span>\n            :multiple<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span>\n            :before-upload<span class=\"token operator\">=</span><span class=\"token string\">\"beforeUploadVideo\"</span>\n            :http-request<span class=\"token operator\">=</span><span class=\"token string\">\"UploadVideo\"</span>\n          <span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>i class<span class=\"token operator\">=</span><span class=\"token string\">\"el-icon-upload\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>/i<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>div class<span class=\"token operator\">=</span><span class=\"token string\">\"el-upload__text\"</span><span class=\"token operator\">&gt;</span>\n              将文件拖到此处，或<span class=\"token operator\">&lt;</span>em<span class=\"token operator\">&gt;</span>点击上传<span class=\"token operator\">&lt;</span>/em<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>/div<span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span>/el-upload<span class=\"token operator\">&gt;</span>\n          //进度条\n          <span class=\"token operator\">&lt;</span>el-progress\n            v-show<span class=\"token operator\">=</span><span class=\"token string\">\"progressFlag\"</span>\n            :percentage<span class=\"token operator\">=</span><span class=\"token string\">\"loadProgress\"</span>\n          <span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>/el-progress<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>/el-form-item<span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      progressFlag: false,\n      loadProgress: 0,\n     <span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>method中的方法</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">//视频上传\n    UploadVideo<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      this.form.videoPath <span class=\"token operator\">=</span> URL.createObjectURL<span class=\"token punctuation\">(</span>params.file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      this.progressFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      this.loadProgress <span class=\"token operator\">=</span> 0<span class=\"token punctuation\">;</span>\n      const interval <span class=\"token operator\">=</span> setInterval<span class=\"token punctuation\">((</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>this.loadProgress <span class=\"token operator\">&gt;=</span> 99<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          clearInterval<span class=\"token punctuation\">(</span>interval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        this.loadProgress +<span class=\"token operator\">=</span> 1<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>, 20<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      upload<span class=\"token punctuation\">(</span><span class=\"token string\">\"/api/EToolFile\"</span>, params.file<span class=\"token punctuation\">)</span>.then<span class=\"token punctuation\">((</span>res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n        console.log<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        this.form.videoPath <span class=\"token operator\">=</span> res.data.data.name<span class=\"token punctuation\">;</span>\n        this.progressFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        this.loadProgress <span class=\"token operator\">=</span> 100<span class=\"token punctuation\">;</span>\n        this.<span class=\"token variable\">$message</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          type: <span class=\"token string\">\"success\"</span>,\n          message: <span class=\"token string\">\"上传成功!\"</span>,\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        // 清空上传列表\n        this.<span class=\"token variable\">$refs</span>.video.clearFiles<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>,\n    beforeUploadVideo<span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      const isLt30M <span class=\"token operator\">=</span> file.size / 1024 / 1024 <span class=\"token operator\">&lt;</span> 30<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">[</span>\n          <span class=\"token string\">\"video/mp4\"</span>,\n          <span class=\"token string\">\"video/ogg\"</span>,\n          <span class=\"token string\">\"video/flv\"</span>,\n          <span class=\"token string\">\"video/avi\"</span>,\n          <span class=\"token string\">\"video/wmv\"</span>,\n          <span class=\"token string\">\"video/rmvb\"</span>,\n        <span class=\"token punctuation\">]</span>.indexOf<span class=\"token punctuation\">(</span>file.type<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> -1\n      <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        this.<span class=\"token variable\">$message</span>.error<span class=\"token punctuation\">(</span><span class=\"token string\">\"请上传正确的视频格式\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isLt30M<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        this.<span class=\"token variable\">$message</span>.error<span class=\"token punctuation\">(</span><span class=\"token string\">\"上传视频大小不能超过30MB哦!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>,\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "element ui",
                "vue",
                "javascript"
            ]
        },
        {
            "id": "http://example.com/2022/10/12/security-zi-ding-yi-deng-lu-ye-mian/",
            "url": "http://example.com/2022/10/12/security-zi-ding-yi-deng-lu-ye-mian/",
            "title": "security自定义登录页面",
            "date_published": "2022-10-12T06:47:03.346Z",
            "content_html": "<p><strong>1.首先登录页面form表单，要写上action连接，提交方式必须为post</strong></p>\n<span id=\"more\"></span>\n<h1 id=\"注意事项：\"><a href=\"#注意事项：\" class=\"headerlink\" title=\"注意事项：\"></a>注意事项：</h1><ul>\n<li>action链接与@RequestMapping一致</li>\n<li>input要写name属性，后端才获取到数据，也是为了得到下面的参数<pre><code>        http.formLogin()\n             .usernameParameter(\"username\")\n             .passwordParameter(\"password\")    \n</code></pre>\n</li>\n<li>注意button的<strong>type属性是submit</strong>，不是button,否则点击会没反应</li>\n</ul>\n<h1 id=\"html层\"><a href=\"#html层\" class=\"headerlink\" title=\"html层\"></a>html层</h1><pre class=\"line-numbers language-html\"><code class=\"language-html\"> <span class=\"token comment\" spellcheck=\"true\">&lt;!--登录页面--&gt;</span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>panel-body<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>action</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>@{/admin/login}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n               <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>form-group<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n                   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>form-control<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>exampleInputEmail1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>admin<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n               <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n               <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>form-group<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n                   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>form-control<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>exampleInputPassword1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>PassWord<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n               <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n               <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n                   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n                       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> 记住我\n                   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n               <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n               <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>@{/admin/register}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>btn btn-default<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>注<span class=\"token entity\" title=\"&nbsp;\">&amp;nbsp;</span>册<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>\n               <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>btn btn-danger<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>登<span class=\"token entity\" title=\"&nbsp;\">&amp;nbsp;</span>录<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"controller层\"><a href=\"#controller层\" class=\"headerlink\" title=\"controller层\"></a>controller层</h1><pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Controller</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BaseController</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@RequestMapping</span>  <span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/admin/login\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> String <span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">\"admin/login\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"security安全认证\"><a href=\"#security安全认证\" class=\"headerlink\" title=\"security安全认证\"></a>security安全认证</h1><p>在formLogin()后面加上</p>\n<pre class=\"line-numbers language-java\"><code class=\"language-java\">             <span class=\"token punctuation\">.</span><span class=\"token function\">usernameParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">passwordParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">loginPage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/admin/login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>即可</p>\n<pre class=\"line-numbers language-java\"><code class=\"language-java\">\n<span class=\"token annotation punctuation\">@EnableWebSecurity</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SecurityConfig</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">WebSecurityConfigurerAdapter</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">//授权</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span>HttpSecurity http<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> Exception <span class=\"token punctuation\">{</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">//没有权限会跳到登录页</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">formLogin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">usernameParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">passwordParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">loginPage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/admin/login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                \n        http<span class=\"token punctuation\">.</span><span class=\"token function\">csrf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//关闭csrf功能</span>\n        <span class=\"token comment\" spellcheck=\"true\">//注销,logoutUrl:注销成功，跳转的页面，比如首页</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">logout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">logoutSuccessUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">//开启记住我功能，cookie,默认保存两周</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">rememberMe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n \n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>如果想要了解security连接数据库验证登录页面，请参照：</p>\n<p><a href=\"https://blog.csdn.net/qq_45489665/article/details/117264126?spm=1001.2014.3001.5501\">https://blog.csdn.net/qq_45489665/article/details/117264126?spm=1001.2014.3001.5501</a></p>\n",
            "tags": [
                "springboot",
                "数据库",
                "安全"
            ]
        },
        {
            "id": "http://example.com/2022/10/12/security-zi-ding-yi-shu-ju-ku-lei-xing-de-ren-zheng-yu-shou-quan/",
            "url": "http://example.com/2022/10/12/security-zi-ding-yi-shu-ju-ku-lei-xing-de-ren-zheng-yu-shou-quan/",
            "title": "security自定义数据库类型的认证与授权",
            "date_published": "2022-10-12T06:39:48.473Z",
            "content_html": "<p>如图所示：</p>\n<span id=\"more\"></span>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20210525205901160.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDg5NjY1,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>登录页面地址<br><img src=\"https://img-blog.csdnimg.cn/20210525205936742.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"建立数据库\"><a href=\"#建立数据库\" class=\"headerlink\" title=\"建立数据库\"></a>建立数据库</h1><pre class=\"line-numbers language-c\"><code class=\"language-c\">create table <span class=\"token function\">users</span><span class=\"token punctuation\">(</span>id <span class=\"token function\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> not null primary key AUTO_INCREMENT<span class=\"token punctuation\">,</span>username <span class=\"token function\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> not null<span class=\"token punctuation\">,</span>password <span class=\"token function\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> not null<span class=\"token punctuation\">,</span>roles text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"填入数据\"><a href=\"#填入数据\" class=\"headerlink\" title=\"填入数据\"></a>填入数据</h1><pre class=\"line-numbers language-c\"><code class=\"language-c\">INSERT INTO `users`<span class=\"token punctuation\">(</span>`id`<span class=\"token punctuation\">,</span> `username`<span class=\"token punctuation\">,</span> `password`<span class=\"token punctuation\">,</span> `roles`<span class=\"token punctuation\">)</span> <span class=\"token function\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'admin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'12'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ROLE_ADMIN,ROLE_USER'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nINSERT INTO `users`<span class=\"token punctuation\">(</span>`id`<span class=\"token punctuation\">,</span> `username`<span class=\"token punctuation\">,</span> `password`<span class=\"token punctuation\">,</span> `roles`<span class=\"token punctuation\">)</span> <span class=\"token function\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'23'</span> <span class=\"token string\">'ROLE_USER'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h1 id=\"编写user实体类\"><a href=\"#编写user实体类\" class=\"headerlink\" title=\"编写user实体类\"></a>编写user实体类</h1><pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>blog<span class=\"token punctuation\">.</span>pojo<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> lombok<span class=\"token punctuation\">.</span>AllArgsConstructor<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> lombok<span class=\"token punctuation\">.</span>Data<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> lombok<span class=\"token punctuation\">.</span>NoArgsConstructor<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>GrantedAuthority<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>List<span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">//这种注解的形式，要加依赖lombok</span>\n\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token annotation punctuation\">@AllArgsConstructor</span>\n<span class=\"token annotation punctuation\">@NoArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Users</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> Long id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> String username<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> String password<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> String roles<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token function\">Users</span><span class=\"token punctuation\">(</span>String username<span class=\"token punctuation\">,</span> String encode<span class=\"token punctuation\">,</span> List<span class=\"token operator\">&lt;</span>GrantedAuthority<span class=\"token operator\">&gt;</span> authorities<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"依赖及properties配置\"><a href=\"#依赖及properties配置\" class=\"headerlink\" title=\"依赖及properties配置\"></a>依赖及properties配置</h1><pre class=\"line-numbers language-xml\"><code class=\"language-xml\"> <span class=\"token comment\" spellcheck=\"true\">&lt;!--        mybatis提供的--&gt;</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.mybatis.spring.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>mybatis-spring-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>2.1.3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-boot-starter-jdbc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>mysql<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>mysql-connector-java<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">&gt;</span></span>runtime<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token comment\" spellcheck=\"true\">&lt;!--        认证security--&gt;</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-boot-starter-security<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>properties配置</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">spring.datasource.username<span class=\"token operator\">=</span>root\nspring.datasource.password<span class=\"token operator\">=</span>root\nspring.datasource.url<span class=\"token operator\">=</span>jdbc:mysql://localhost:3306/sblog?useUnicode<span class=\"token operator\">=</span>true<span class=\"token operator\">&amp;</span>characterEncoding<span class=\"token operator\">=</span>utf-8<span class=\"token operator\">&amp;</span>serverTimezone<span class=\"token operator\">=</span>UTC<span class=\"token operator\">&amp;</span>useSSL<span class=\"token operator\">=</span>true\nspring.datasource.driver-class-name<span class=\"token operator\">=</span>com.mysql.cj.jdbc.Driver\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"启动类加上映射接口\"><a href=\"#启动类加上映射接口\" class=\"headerlink\" title=\"启动类加上映射接口\"></a>启动类加上映射接口</h1><pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>blog<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>mybatis<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>MapperScan<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>SpringApplication<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span>SpringBootApplication<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//@MapperScan作用：com.blog.mapper包下面的接口类，注册之后将会变成对应的实现类</span>\n\n<span class=\"token annotation punctuation\">@MapperScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.blog.mapper\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@SpringBootApplication</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringbootBlogApplication</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        SpringApplication<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span>SpringbootBlogApplication<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"编写Mapper接口\"><a href=\"#编写Mapper接口\" class=\"headerlink\" title=\"编写Mapper接口\"></a>编写Mapper接口</h1><pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Mapper</span>\n<span class=\"token annotation punctuation\">@Repository</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">UserMapper</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">//根据账号查询用户信息</span>\n   <span class=\"token annotation punctuation\">@Select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select * from users where username = #{username}\"</span><span class=\"token punctuation\">)</span>\n   Users <span class=\"token function\">getUserInfoByUsername</span><span class=\"token punctuation\">(</span>String username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"编写第一个service\"><a href=\"#编写第一个service\" class=\"headerlink\" title=\"编写第一个service\"></a>编写第一个service</h1><pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>blog<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> com<span class=\"token punctuation\">.</span>blog<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span>UserMapper<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> com<span class=\"token punctuation\">.</span>blog<span class=\"token punctuation\">.</span>pojo<span class=\"token punctuation\">.</span>Users<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>Autowired<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span>Service<span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserInfoServiceImpl</span><span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> UserMapper userMapper<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> Users <span class=\"token function\">getUserInfo</span><span class=\"token punctuation\">(</span>String username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">getUserInfoByUsername</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"编写controller层\"><a href=\"#编写controller层\" class=\"headerlink\" title=\"编写controller层\"></a>编写controller层</h1><pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Controller</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BaseController</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    UserInfoServiceImpl userInfoService<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@RequestMapping</span>  <span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/admin/login\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> Users <span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span>String name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> userInfoService<span class=\"token punctuation\">.</span><span class=\"token function\">getUserInfo</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"然后编写另一个service，和security认证功能\"><a href=\"#然后编写另一个service，和security认证功能\" class=\"headerlink\" title=\"然后编写另一个service，和security认证功能\"></a>然后编写另一个service，和security认证功能</h1><pre class=\"line-numbers language-java\"><code class=\"language-java\">\n<span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomUserService</span>  <span class=\"token keyword\">implements</span> <span class=\"token class-name\">UserDetailsService</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> UserInfoServiceImpl userInfoService<span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> PasswordEncoder passwordEncoder<span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> UserDetails <span class=\"token function\">loadUserByUsername</span><span class=\"token punctuation\">(</span>String username<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> UsernameNotFoundException <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\" spellcheck=\"true\">//从数据库尝试获取该用户</span>\n        Users user <span class=\"token operator\">=</span> userInfoService<span class=\"token punctuation\">.</span><span class=\"token function\">getUserInfo</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">//用户不存在 抛出异常</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UsernameNotFoundException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"用户不存在\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\" spellcheck=\"true\">// 得到用户角色</span>\n        String role <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">getRoles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// 角色集合</span>\n        List<span class=\"token operator\">&lt;</span>GrantedAuthority<span class=\"token operator\">&gt;</span> authorities <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">// 角色必须以`ROLE_`开头，数据库中没有，则在这里加</span>\n        authorities<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleGrantedAuthority</span><span class=\"token punctuation\">(</span>role<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span>\n                user<span class=\"token punctuation\">.</span><span class=\"token function\">getUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token comment\" spellcheck=\"true\">// 因为数据库是明文，所以这里需加密密码</span>\n                passwordEncoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                authorities\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"编写认证授权功能\"><a href=\"#编写认证授权功能\" class=\"headerlink\" title=\"编写认证授权功能\"></a>编写认证授权功能</h2><pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>blog<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> com<span class=\"token punctuation\">.</span>blog<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>CustomUserService<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> com<span class=\"token punctuation\">.</span>blog<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>UserInfoServiceImpl<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>Autowired<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>Bean<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>authentication<span class=\"token punctuation\">.</span>builders<span class=\"token punctuation\">.</span>AuthenticationManagerBuilder<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>builders<span class=\"token punctuation\">.</span>HttpSecurity<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>configuration<span class=\"token punctuation\">.</span>EnableWebSecurity<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>configuration<span class=\"token punctuation\">.</span>WebSecurityConfigurerAdapter<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>crypto<span class=\"token punctuation\">.</span>bcrypt<span class=\"token punctuation\">.</span>BCryptPasswordEncoder<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>crypto<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">.</span>PasswordEncoder<span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@EnableWebSecurity</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SecurityConfig</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">WebSecurityConfigurerAdapter</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> CustomUserService customUserService<span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> PasswordEncoder <span class=\"token function\">passwordEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\" spellcheck=\"true\">// 使用BCrypt加密密码</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BCryptPasswordEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\" spellcheck=\"true\">//授权</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span>HttpSecurity http<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> Exception <span class=\"token punctuation\">{</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">//没有权限会跳到登录页，注意这里要在任何页面都要授权anyRequest()之前，允许登录页面任何时候都可以访问，否则会报localhost重定向过多的错</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">formLogin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">usernameParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">passwordParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">loginPage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/admin/login\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">authorizeRequests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">antMatchers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/admin/login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">permitAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">antMatchers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/admin/register\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">permitAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">anyRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">authenticated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">csrf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//关闭csrf功能</span>\n        <span class=\"token comment\" spellcheck=\"true\">//注销,logoutUrl:注销成功，跳转的页面，比如首页</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">logout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">logoutSuccessUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">//开启记住我功能，cookie,默认保存两周</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">rememberMe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\" spellcheck=\"true\">//认证</span>\n    <span class=\"token comment\" spellcheck=\"true\">//passwordEncoding:密码编码,将前端传过来的密码进行某种方式的加密，否则会报错</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span>AuthenticationManagerBuilder auth<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> Exception <span class=\"token punctuation\">{</span>\n\n            auth<span class=\"token punctuation\">.</span><span class=\"token function\">userDetailsService</span><span class=\"token punctuation\">(</span>customUserService<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">passwordEncoder</span><span class=\"token punctuation\">(</span><span class=\"token function\">passwordEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后直接访问就可以啦!</p>\n",
            "tags": [
                "springboot",
                "数据库",
                "安全"
            ]
        },
        {
            "id": "http://example.com/2022/10/12/vue3-de-tabs-xuan-xiang-qia-de-zhi-zuo/",
            "url": "http://example.com/2022/10/12/vue3-de-tabs-xuan-xiang-qia-de-zhi-zuo/",
            "title": "vue3的tabs选项卡的制作",
            "date_published": "2022-10-12T06:32:11.147Z",
            "content_html": "<p>如图所示：</p>\n<span id=\"more\"></span>\n<p><img src=\"https://img-blog.csdnimg.cn/8c994977111740a1941e909b4cc7cde5.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><ol>\n<li>点击左侧菜单，右侧内容展示区显示对应的选项卡</li>\n<li>点击右侧选项卡，左侧菜单也相应的选中。点击tabs跳转到相应的路径，route.push，菜单中用computed监听path的变化</li>\n<li>解决刷新后，tabs数据丢失的问题</li>\n</ol>\n<p>因为route可以直接获取到当前路由的path等信息，不用在菜单中点击菜单的触发方法，直接获取当前的路由，然后菜单页面和tabs页面都用computed监听path的变化</p>\n<h2 id=\"tabs选项卡存储在store里面\"><a href=\"#tabs选项卡存储在store里面\" class=\"headerlink\" title=\"tabs选项卡存储在store里面\"></a>tabs选项卡存储在store里面</h2><p>因为菜单组件和tab标签页组建共享tabs数组,所以存储在store里面<br>首先创建tabs标签的接口：</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\" spellcheck=\"true\">// 选项卡的数据类型, 规定数据类型就只能有title 和 path</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ITabe</span><span class=\"token punctuation\">{</span>\n  title<span class=\"token punctuation\">:</span>string<span class=\"token punctuation\">,</span>\n  path<span class=\"token punctuation\">:</span>string\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在store里面</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">State</span> <span class=\"token punctuation\">{</span>\n  count<span class=\"token punctuation\">:</span> number<span class=\"token punctuation\">,</span>\n  collapse<span class=\"token punctuation\">:</span> boolean<span class=\"token punctuation\">,</span>\n  tabsList<span class=\"token punctuation\">:</span> Array<span class=\"token operator\">&lt;</span>ITabe<span class=\"token operator\">&gt;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> key<span class=\"token punctuation\">:</span> InjectionKey<span class=\"token operator\">&lt;</span>Store<span class=\"token operator\">&lt;</span>State<span class=\"token operator\">&gt;</span><span class=\"token operator\">&gt;</span> <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> createStore<span class=\"token operator\">&lt;</span>State<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  state<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    tabsList<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  mutations<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">addTabe</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">:</span> State<span class=\"token punctuation\">,</span> tab<span class=\"token punctuation\">:</span> ITabe<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\" spellcheck=\"true\">// 判断是否已经存在,如果不存在,才放入</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">.</span>tabsList<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span>item <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> item<span class=\"token punctuation\">.</span>path <span class=\"token operator\">===</span> tab<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n      state<span class=\"token punctuation\">.</span>tabsList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>tab<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  getters<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// 获取Tabs</span>\n    <span class=\"token function\">getTabs</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">:</span> State<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span>tabsList\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"tabs页面\"><a href=\"#tabs页面\" class=\"headerlink\" title=\"tabs页面\"></a>tabs页面</h2><p> 获取tabs数据</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> tabsList <span class=\"token operator\">=</span> <span class=\"token function\">computed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> store<span class=\"token punctuation\">.</span>getters<span class=\"token punctuation\">[</span><span class=\"token string\">'getTabs'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>添加选项卡（每点击菜单，就添加一个）</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> addTab <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">,</span> meta <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> route\n  <span class=\"token keyword\">const</span> tab<span class=\"token punctuation\">:</span> ITabe <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">,</span>\n    title<span class=\"token punctuation\">:</span> meta<span class=\"token punctuation\">.</span>title <span class=\"token keyword\">as</span> string\n  <span class=\"token punctuation\">}</span>\n  store<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'addTabe'</span><span class=\"token punctuation\">,</span> tab<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>点击选项卡</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> clickBtn <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tab<span class=\"token punctuation\">:</span> any<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> props <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> tab\n  <span class=\"token comment\" spellcheck=\"true\">//跳转路由</span>\n  router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> props<span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>当前激活的选项卡（当前所在的路由）</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> activeTab <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\" spellcheck=\"true\">//是v-model的绑定</span>\n<span class=\"token keyword\">const</span> setActiveTab <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n  activeTab<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> route<span class=\"token punctuation\">.</span>path\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>删除选项卡</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\" spellcheck=\"true\">//删除选项卡，跳转到临近页面，这个tabs标签删除</span>\n<span class=\"token keyword\">const</span> removeTab <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>targetName<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>tabsList<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n  <span class=\"token keyword\">const</span> tabs <span class=\"token operator\">=</span> tabsList<span class=\"token punctuation\">.</span>value\n  <span class=\"token keyword\">let</span> activeName <span class=\"token operator\">=</span> activeTab<span class=\"token punctuation\">.</span>value\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>activeName <span class=\"token operator\">===</span> targetName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>   <span class=\"token comment\" spellcheck=\"true\">//如果当前的路由是要删除的页面</span>\n    tabs<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>tab<span class=\"token punctuation\">:</span>ITabe<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">:</span>number<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tab<span class=\"token punctuation\">.</span>path <span class=\"token operator\">===</span> targetName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> nextTab <span class=\"token operator\">=</span> tabs<span class=\"token punctuation\">[</span>index <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> tabs<span class=\"token punctuation\">[</span>index <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\" spellcheck=\"true\">//如果在中间的tab，删除会选择在后面的一个；如果在最后，会选择在前面的一个tab</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextTab<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          activeName <span class=\"token operator\">=</span> nextTab<span class=\"token punctuation\">.</span>path  <span class=\"token comment\" spellcheck=\"true\">//更换当前路由的地址</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\" spellcheck=\"true\">//重新设置当前激活的选项卡</span>\n  activeTab<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> activeName\n  <span class=\"token comment\" spellcheck=\"true\">//重新设置选项卡数据,将数组中去掉删除的元素</span>\n  store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>tabsList <span class=\"token operator\">=</span> tabs<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>tab<span class=\"token punctuation\">:</span>ITabe<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> tab<span class=\"token punctuation\">.</span>path <span class=\"token operator\">!==</span> targetName<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\" spellcheck=\"true\">//跳转路由</span>\n  router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>path<span class=\"token punctuation\">:</span> activeName<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>解决刷新数据丢失的问题</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> beforeRefresh <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"beforeunload\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\" spellcheck=\"true\">//监听刷新</span>\n     <span class=\"token comment\" spellcheck=\"true\">// sessionStorage当浏览器关闭时，结束。localStorage，没有期限</span>\n     sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tabsView'</span><span class=\"token punctuation\">,</span>JSON<span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>tabsList<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\" spellcheck=\"true\">//页面加载时取数据</span>\n  <span class=\"token keyword\">let</span> tabSession <span class=\"token operator\">=</span> sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tabsView'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tabSession<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> oldTabs <span class=\"token operator\">=</span> JSON<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>tabSession<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>oldTabs<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>tabsList <span class=\"token operator\">=</span> oldTabs\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h2><pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>tabs\n    v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"activeTab\"</span>\n    @tab<span class=\"token operator\">-</span>click <span class=\"token operator\">=</span> <span class=\"token string\">\"clickBtn\"</span>\n    type<span class=\"token operator\">=</span><span class=\"token string\">\"card\"</span>\n    <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"demo-tabs\"</span>\n    closable    \n    @tab<span class=\"token operator\">-</span>remove<span class=\"token operator\">=</span><span class=\"token string\">\"removeTab\"</span>\n  <span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>tab<span class=\"token operator\">-</span>pane\n      v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"item in tabsList\"</span>\n      <span class=\"token punctuation\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"item.path\"</span>\n      <span class=\"token punctuation\">:</span>label<span class=\"token operator\">=</span><span class=\"token string\">\"item.title\"</span>\n      <span class=\"token punctuation\">:</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"item.path\"</span>\n    <span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>tab<span class=\"token operator\">-</span>pane<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>tabs<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span> setup<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> onMounted<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">,</span>watch<span class=\"token punctuation\">,</span>computed <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useStore <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/store'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useRoute<span class=\"token punctuation\">,</span> useRouter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-router'</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ITabe <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/store/type'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">useStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> route <span class=\"token operator\">=</span> <span class=\"token function\">useRoute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">useRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\" spellcheck=\"true\">//获取tabs数据</span>\n<span class=\"token keyword\">const</span> tabsList <span class=\"token operator\">=</span> <span class=\"token function\">computed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> store<span class=\"token punctuation\">.</span>getters<span class=\"token punctuation\">[</span><span class=\"token string\">'getTabs'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tabsList<span class=\"token punctuation\">,</span><span class=\"token string\">\"tabsList\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\" spellcheck=\"true\">// let tabIndex = 2</span>\n<span class=\"token keyword\">const</span> activeTab <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//点击选项卡,跳转到相应的页面，菜单也恢复到相应的页面</span>\n<span class=\"token keyword\">const</span> clickBtn <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tab<span class=\"token punctuation\">:</span>any<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> props <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> tab\n    router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>path<span class=\"token punctuation\">:</span> props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//删除选项卡，跳转到临近页面，这个tabs标签删除</span>\n<span class=\"token keyword\">const</span> removeTab <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>targetName<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>tabsList<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n  <span class=\"token keyword\">const</span> tabs <span class=\"token operator\">=</span> tabsList<span class=\"token punctuation\">.</span>value\n  <span class=\"token keyword\">let</span> activeName <span class=\"token operator\">=</span> activeTab<span class=\"token punctuation\">.</span>value\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>activeName <span class=\"token operator\">===</span> targetName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>   <span class=\"token comment\" spellcheck=\"true\">//如果当前的路由是要删除的页面</span>\n    tabs<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>tab<span class=\"token punctuation\">:</span>ITabe<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">:</span>number<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tab<span class=\"token punctuation\">.</span>path <span class=\"token operator\">===</span> targetName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> nextTab <span class=\"token operator\">=</span> tabs<span class=\"token punctuation\">[</span>index <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> tabs<span class=\"token punctuation\">[</span>index <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\" spellcheck=\"true\">//如果在中间的tab，删除会选择在后面的一个；如果在最后，会选择在前面的一个tab</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextTab<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          activeName <span class=\"token operator\">=</span> nextTab<span class=\"token punctuation\">.</span>path  <span class=\"token comment\" spellcheck=\"true\">//更换当前路由的地址</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\" spellcheck=\"true\">//重新设置当前激活的选项卡</span>\n  activeTab<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> activeName\n  <span class=\"token comment\" spellcheck=\"true\">//重新设置选项卡数据,将数组中去掉删除的元素</span>\n  store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>tabsList <span class=\"token operator\">=</span> tabs<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>tab<span class=\"token punctuation\">:</span>ITabe<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> tab<span class=\"token punctuation\">.</span>path <span class=\"token operator\">!==</span> targetName<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\" spellcheck=\"true\">//跳转路由</span>\n  router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>path<span class=\"token punctuation\">:</span> activeName<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//添加路由的选项卡</span>\n<span class=\"token keyword\">const</span> addTabs <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">,</span>meta <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> route\n    <span class=\"token keyword\">const</span> tabs<span class=\"token punctuation\">:</span>ITabe <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        title<span class=\"token punctuation\">:</span> meta<span class=\"token punctuation\">.</span>title <span class=\"token keyword\">as</span> string<span class=\"token punctuation\">,</span>\n        path<span class=\"token punctuation\">:</span> path\n    <span class=\"token punctuation\">}</span>\n    store<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'addTab'</span><span class=\"token punctuation\">,</span>tabs<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//激活选项卡</span>\n<span class=\"token keyword\">const</span> setActiveTab <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n    activeTab<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> route<span class=\"token punctuation\">.</span>path  <span class=\"token comment\" spellcheck=\"true\">//因为el-tab-pane的name是item.path，所以activeTab也是path</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">watch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> route<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">//激活选项卡</span>\n    <span class=\"token function\">setActiveTab</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\" spellcheck=\"true\">//监听路由的变化</span>\n    <span class=\"token function\">addTabs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> \n\n<span class=\"token comment\" spellcheck=\"true\">//解决刷新数据页面丢失的问题</span>\n<span class=\"token keyword\">const</span> beforeRefresh <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"beforeunload\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\" spellcheck=\"true\">//监听刷新</span>\n     <span class=\"token comment\" spellcheck=\"true\">// sessionStorage当浏览器关闭时，结束。localStorage，没有期限</span>\n     sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tabsView'</span><span class=\"token punctuation\">,</span>JSON<span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>tabsList<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\" spellcheck=\"true\">//页面加载时取数据</span>\n  <span class=\"token keyword\">let</span> tabSession <span class=\"token operator\">=</span> sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tabsView'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tabSession<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> oldTabs <span class=\"token operator\">=</span> JSON<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>tabSession<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>oldTabs<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>tabsList <span class=\"token operator\">=</span> oldTabs\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//调用函数需要在模板加载之后调用</span>\n<span class=\"token function\">onMounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">beforeRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setActiveTab</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">addTabs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "vue3",
                "TypeScript"
            ]
        },
        {
            "id": "http://example.com/2022/10/12/springboot-zheng-he-redis-shi-bao-cuo/",
            "url": "http://example.com/2022/10/12/springboot-zheng-he-redis-shi-bao-cuo/",
            "title": "springboot整合redis时报错：Unable to connect to Redis； nested exception is io.lettuce.core.RedisConnect",
            "date_published": "2022-10-12T06:28:40.124Z",
            "content_html": "<p>在网上试了好多，更改redis.windows.conf文件的方法没有效果，<br>最后发现在打开redis-server.exe出现闪退，然后寻找解决原因，发现是之前设置了密码，然后没有输密码，直接启动，导致出错。</p>\n<span id=\"more\"></span>\n<p>解决：在redis.windows.conf文件中，将</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"> requirepass foobared\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>解注，并重新设置密码</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\">requirepass <span class=\"token number\">123456</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后在Windows黑窗口中，切换到redis文件夹目录，之后输入下面命令启动</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\">redis<span class=\"token operator\">-</span>server<span class=\"token punctuation\">.</span>exe redis<span class=\"token punctuation\">.</span>windows<span class=\"token punctuation\">.</span>conf\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>参考链接：<br><a href=\"https://blog.csdn.net/ls1850147551/article/details/116234724?utm_medium=distribute.pc_relevant_download.none-task-blog-baidujs-1.nonecase&amp;depth_1-utm_source=distribute.pc_relevant_download.none-task-blog-baidujs-1.nonecase\">https://blog.csdn.net/ls1850147551/article/details/116234724?utm_medium=distribute.pc_relevant_download.none-task-blog-baidujs-1.nonecase&amp;depth_1-utm_source=distribute.pc_relevant_download.none-task-blog-baidujs-1.nonecase</a></p>\n",
            "tags": [
                "redis"
            ]
        },
        {
            "id": "http://example.com/2022/10/12/el-select-shi-xian-dong-tai-xuan-ze-xuan-xiang/",
            "url": "http://example.com/2022/10/12/el-select-shi-xian-dong-tai-xuan-ze-xuan-xiang/",
            "title": "el-select实现动态选择选项",
            "date_published": "2022-10-12T06:18:39.301Z",
            "content_html": "<p>首先data里面声明数组</p>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"> <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        selectShop<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后在el-option里面写到</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"> <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>option v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"item in selectShop\"</span>\n    <span class=\"token punctuation\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"item.id\"</span>\n    <span class=\"token punctuation\">:</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"item.id\"</span>\n    <span class=\"token punctuation\">:</span>label<span class=\"token operator\">=</span><span class=\"token string\">\"item.name\"</span>\n <span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>完整代码</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"> <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item label<span class=\"token operator\">=</span><span class=\"token string\">\"店铺:\"</span> <span class=\"token punctuation\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"selectShop\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>select\n    <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"dialogSelect\"</span>\n    v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"form.shopId\"</span>\n    placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"选择店铺\"</span>\n    clearable\n    <span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>option v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"item in selectShop\"</span>\n            <span class=\"token punctuation\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"item.id\"</span>\n            <span class=\"token punctuation\">:</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"item.id\"</span>\n            <span class=\"token punctuation\">:</span>label<span class=\"token operator\">=</span><span class=\"token string\">\"item.name\"</span>\n        <span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>option<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>select<span class=\"token operator\">&gt;</span>\n <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item<span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "element ui",
                "vue",
                "javascript"
            ]
        },
        {
            "id": "http://example.com/2022/09/23/el-select-shi-xian-dong-tai-cong-hou-tai-huo-qu-bian-li-xie-chu-xuan-xiang/",
            "url": "http://example.com/2022/09/23/el-select-shi-xian-dong-tai-cong-hou-tai-huo-qu-bian-li-xie-chu-xuan-xiang/",
            "title": "el-select实现动态从后台获取，遍历写出选项",
            "date_published": "2022-09-23T12:58:25.134Z",
            "content_html": "<p>首先，在data中声明一个值</p>\n<span id=\"more\"></span>\n\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      dishesInfoList<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p> 其次，在查询遍历列表信息的接口中获取数据</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">listDishesInfo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queryParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>response <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dishesInfoList <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>之后，在el-form中写上 : data；在el-select中写上v-model（写不写都行）；<br>在el-option里面写上</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\">v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"item in dishesInfoList\"</span>\n    <span class=\"token punctuation\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"item.id\"</span>\n    <span class=\"token punctuation\">:</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"item.shopId\"</span>\n    <span class=\"token punctuation\">:</span>label<span class=\"token operator\">=</span><span class=\"token string\">\"item.shopId\"</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>具体代码如下：</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>form ref<span class=\"token operator\">=</span><span class=\"token string\">\"form\"</span>  <span class=\"token punctuation\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"dishesInfoList\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>select\n        v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"dishesInfoList.shopId\"</span><span class=\"token comment\" spellcheck=\"true\">//在这里写上</span>\n        placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"选择店铺\"</span>\n        clearable\n        @keyup<span class=\"token punctuation\">.</span>enter<span class=\"token punctuation\">.</span>native<span class=\"token operator\">=</span><span class=\"token string\">\"handleQuery\"</span>\n    <span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>option v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"item in dishesInfoList\"</span>\n            <span class=\"token punctuation\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"item.id\"</span>\n            <span class=\"token punctuation\">:</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"item.shopId\"</span>\n            <span class=\"token punctuation\">:</span>label<span class=\"token operator\">=</span><span class=\"token string\">\"item.shopId\"</span>\n        <span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>option<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>select<span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "element ui",
                "vue",
                "javascript"
            ]
        },
        {
            "id": "http://example.com/2022/09/20/this-yuan-li/",
            "url": "http://example.com/2022/09/20/this-yuan-li/",
            "title": "this原理",
            "date_published": "2022-09-20T12:39:03.848Z",
            "content_html": "<p>this是一个指针型变量，它指向当前函数的运行环境。</p>\n<span id=\"more\"></span>\n<p>1.内存的数据结构</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> foo<span class=\"token punctuation\">:</span>  <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://www.wangbase.com/blogimg/asset/201806/bg2018061801.png\" alt=\"img\"></p>\n<p><strong><img src=\"https://www.wangbase.com/blogimg/asset/201806/bg2018061802.png\" alt=\"img\"></strong></p>\n<p>2.函数</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> foo<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>引擎会将函数单独保存在内存中，然后再将函数的地址赋值给<code>foo</code>属性的<code>value</code>属性。</p>\n<p><img src=\"https://www.wangbase.com/blogimg/asset/201806/bg2018061803.png\" alt=\"img\"></p>\n<p>由于函数是一个单独的值，所以它可以在不同的环境（上下文）执行。</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"> <span class=\"token keyword\">var</span> f <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> f<span class=\"token punctuation\">:</span> f <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n \n <span class=\"token comment\" spellcheck=\"true\">// 单独执行</span>\n <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n \n <span class=\"token comment\" spellcheck=\"true\">// obj 环境执行</span>\n obj<span class=\"token punctuation\">.</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>3.环境变量</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> f <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>函数体里面使用了变量<code>x</code>。该变量由运行环境提供。</p>\n<p>上面代码，函数体内的<code>this.x</code>就是当前运行环境的x</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> f <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  f<span class=\"token punctuation\">:</span> f<span class=\"token punctuation\">,</span>\n  x<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 单独执行</span>\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// obj 环境执行</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上面代码中，函数<code>f</code>在全局环境执行，<code>this.x</code>指向全局环境的<code>x</code>。</p>\n<p><img src=\"https://www.wangbase.com/blogimg/asset/201806/bg2018061804.png\" alt=\"img\"></p>\n<p>在<code>obj</code>环境执行，<code>this.x</code>指向<code>obj.x</code>。</p>\n<p><img src=\"https://www.wangbase.com/blogimg/asset/201806/bg2018061805.png\" alt=\"img\"></p>\n<h1 id=\"this的指向问题\"><a href=\"#this的指向问题\" class=\"headerlink\" title=\"this的指向问题\"></a>this的指向问题</h1><p>在不同的场景中调用同一个函数，this的指向也可能会发生变化，但是它永远指向其所在函数的真实调用者（谁调用就指向谁）；如果没有调用者，this就指向全局对象window。</p>\n<p><strong>全局上下文</strong></p>\n<p>非严格模式和严格模式中this都是指向顶层对象（浏览器中是<code>window</code>）</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> window \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token string\">'use strict'</span>\n<span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> window<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'若川'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>函数上下文</strong></p>\n<h2 id=\"普通函数调用模式\"><a href=\"#普通函数调用模式\" class=\"headerlink\" title=\"普通函数调用模式\"></a>普通函数调用模式</h2><p>​    非严格模式下，默认绑定的this指向<code>window</code>。</p>\n<p>​    严格模式下，默认绑定的this指向<code>undefined</code>。</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token comment\" spellcheck=\"true\">// 非严格模式</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'window'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> doSth <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">doSth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// 'window'</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token comment\" spellcheck=\"true\">// 非严格模式</span>\n<span class=\"token keyword\">let</span> name2 <span class=\"token operator\">=</span> <span class=\"token string\">'window2'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> doSth2 <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">doSth2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\" spellcheck=\"true\">// true, undefined</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>​    <code>let</code>没有给顶层对象中（浏览器是window）添加属性，<code>window.name2和window.doSth2</code>都是<code>undefined</code>。</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token comment\" spellcheck=\"true\">// 严格模式</span>\n<span class=\"token string\">'use strict'</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'window'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> doSth <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> <span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">doSth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// true，// 报错，因为this是undefined</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>回调函数，其实也是普通函数调用模式。</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\">　　<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"The Window\"</span><span class=\"token punctuation\">;</span>\n\n　　<span class=\"token keyword\">var</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n　　　　name <span class=\"token punctuation\">:</span> <span class=\"token string\">\"My Object\"</span><span class=\"token punctuation\">,</span>\n\n　　　　getNameFunc <span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n　　　　　　<span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n　　　　　　　　<span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n　　　　　　<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n　　　　<span class=\"token punctuation\">}</span>\n\n　　<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">　　alert</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">.</span><span class=\"token function\">getNameFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token comment\" spellcheck=\"true\">//相当于</span>\n<span class=\"token keyword\">var</span> f <span class=\"token operator\">=</span> object<span class=\"token punctuation\">.</span><span class=\"token function\">getNameFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\" spellcheck=\"true\">//返回一个匿名函数</span>\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//此时调用者是window，所以this会指向window</span>\n解决：\ngetNameFunc <span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> that <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> that<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>     <span class=\"token comment\" spellcheck=\"true\">//更改匿名函数中的this</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>匿名函数的执行环境具有全局性，所以匿名函数this指向window</p>\n<h2 id=\"箭头函数调用模式\"><a href=\"#箭头函数调用模式\" class=\"headerlink\" title=\"箭头函数调用模式\"></a>箭头函数调用模式</h2><p>先看箭头函数和普通函数的重要区别：</p>\n<p>1、没有自己的<code>this</code>、<code>super</code>、<code>arguments</code>和<code>new.target</code>绑定。</p>\n<p>​      也就是说无法通过<code>call</code>、<code>apply</code>、<code>bind</code>绑定箭头函数的<code>this</code></p>\n<p>2、不能使用<code>new</code>来调用。 3、没有原型对象。 4、不可以改变<code>this</code>的绑定。 5、形参名称不能重复。</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'window'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> student <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'若川'</span><span class=\"token punctuation\">,</span>\n    doSth<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> arrowDoSth <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">arrowDoSth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    arrowDoSth2<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nstudent<span class=\"token punctuation\">.</span><span class=\"token function\">doSth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// '若川'</span>\nstudent<span class=\"token punctuation\">.</span><span class=\"token function\">arrowDoSth2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// 'window'</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>箭头函数外的this是缓存的该箭头函数上层的普通函数的this。如果没有普通函数，则是全局对象（浏览器中则是window）。</p>\n<p>因此我们可以修改外层函数this指向达到间接修改箭头函数this的目的。</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'听风是风'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'时间跳跃'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// fn this指向obj1,箭头函数this也指向obj1</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//fn this 指向obj2,箭头函数this也指向obj2</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"构造函数调用模式\"><a href=\"#构造函数调用模式\" class=\"headerlink\" title=\"构造函数调用模式\"></a>构造函数调用模式</h2><p>new操作符调用时，<code>this</code>指向生成的新对象。 </p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Student</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token string\">'若川'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"call，apply和bind调用模式\"><a href=\"#call，apply和bind调用模式\" class=\"headerlink\" title=\"call，apply和bind调用模式\"></a><code>call</code>，apply和bind调用模式</h2><p>​    通过call、apply以及bind方法改变this的指向，也称为显式绑定</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'听风是风'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'时间跳跃'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> obj3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'echo'</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'行星飞行'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//行星飞行</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//听风是风</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//时间跳跃</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>obj3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//echo</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>​    指向参数提供的是null或者undefined，那么 this 将指向全局对象。</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'听风是风'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'时间跳跃'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'行星飞行'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>undefined<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//行星飞行</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//行星飞行</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>undefined<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//行星飞行</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>call、apply与bind有什么区别？</strong></p>\n<p>1.<code>call</code>、apply与bind都用于改变this绑定，但call、apply在改变this指向的同时还会执行函数，而bind在改变this后是返回一个全新的绑定函数，这也是为什么上方例子中bind后还加了一对括号 ()的原因。</p>\n<p>2.<code>bind</code>属于硬绑定，返回的 this 指向无法再次通过bind、apply或 call 修改；call与apply的绑定只适用当前调用，调用完就没了，下次要用还得再次绑。</p>\n<p>3.<code>call</code>与apply功能完全相同，唯一不同的是call方法传递函数调用形参是以散列形式，而apply方法的形参是一个数组。在传参的情况下，call的性能要高于apply，因为apply在执行时还要多一步解析数组。</p>\n<p>描述二：</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'听风是风'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'时间跳跃'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'行星飞行'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//听风是风</span>\n<span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//行星飞行</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//时间跳跃</span>\n<span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//行星飞行</span>\n<span class=\"token keyword\">let</span> boundFn <span class=\"token operator\">=</span> fn<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//听风是风</span>\nboundFn<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//听风是风</span>\nboundFn<span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//听风是风</span>\nboundFn<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//听风是风</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>描述三：</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'听风是风'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">,</span>describe<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`我是</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">,我的年龄是</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">，我非常</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>describe<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span><span class=\"token string\">'26'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'帅'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//我是听风是风,我的年龄是26，我非常帅</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">'26'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'帅'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//我是听风是风,我的年龄是26，我非常帅</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"对象中的函数（方法）调用模式\"><a href=\"#对象中的函数（方法）调用模式\" class=\"headerlink\" title=\"对象中的函数（方法）调用模式\"></a>对象中的函数（方法）调用模式</h2><p>​    如果函数调用时，前面存在调用它的对象，那么this就会隐式绑定到这个对象上</p>\n<pre><code> 如果函数调用前存在多个对象，this指向距离调用自己最近的对象\n</code></pre>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'行星飞行'</span><span class=\"token punctuation\">,</span>\n    func<span class=\"token punctuation\">:</span> fn<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'听风是风'</span><span class=\"token punctuation\">,</span>\n    o<span class=\"token punctuation\">:</span> obj\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nobj1<span class=\"token punctuation\">.</span>o<span class=\"token punctuation\">.</span><span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\" spellcheck=\"true\">//行星飞行</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>​    隐式丢失</p>\n<p>​        最常见的就是作为参数传递以及变量赋值</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token comment\" spellcheck=\"true\">// 参数传递</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'行星飞行'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'听风是风'</span><span class=\"token punctuation\">,</span>\n    fn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">param</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>fn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//行星飞行</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token comment\" spellcheck=\"true\">// 变量赋值</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'行星飞行'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'听风是风'</span><span class=\"token punctuation\">,</span>\n    fn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> fn1 <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>fn<span class=\"token punctuation\">;</span>\n<span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//行星飞行</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"原型链中的调用模式\"><a href=\"#原型链中的调用模式\" class=\"headerlink\" title=\"原型链中的调用模式\"></a>原型链中的调用模式</h2><p>是指向生成的新对象。 如果该对象继承自其它对象。同样会通过原型链查找。 </p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Student</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> s1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token string\">'若川'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nStudent<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>doSth <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\ns1<span class=\"token punctuation\">.</span><span class=\"token function\">doSth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>生成的新对象是Student:{name: ‘若川’}</p>\n<h2 id=\"DOM事件处理函数调用\"><a href=\"#DOM事件处理函数调用\" class=\"headerlink\" title=\"DOM事件处理函数调用\"></a><code>DOM</code>事件处理函数调用</h2><p><code>addEventerListener、attachEvent、onclick</code>指向绑定事件的元素</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>button <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"button\"</span><span class=\"token operator\">&gt;</span>onclick<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>ul <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"list\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">&gt;</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">&gt;</span><span class=\"token number\">2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">&gt;</span><span class=\"token number\">3</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n    <span class=\"token keyword\">var</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    button<span class=\"token punctuation\">.</span>onclick <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> ev<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// true</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> list <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    list<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// true</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> ev<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// true   //当前绑定事件的元素</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\" spellcheck=\"true\">//当前触发事件的元素</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>一些浏览器，比如<code>IE6~IE8</code>下使用<code>attachEvent</code>，<code>this</code>指向是<code>window</code>。</p>\n<h2 id=\"内涵事件处理函数调用\"><a href=\"#内涵事件处理函数调用\" class=\"headerlink\" title=\"内涵事件处理函数调用\"></a>内涵事件处理函数调用</h2><pre class=\"line-numbers language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>btn1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>console.log(this <span class=\"token punctuation\">=</span><span class=\"token punctuation\">=</span><span class=\"token punctuation\">=</span> document.querySelector(<span class=\"token punctuation\">'</span>.btn1<span class=\"token punctuation\">'</span>))<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>点我呀<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>console.log((function(){return this})());<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>再点我呀<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h1 id=\"this绑定优先级\"><a href=\"#this绑定优先级\" class=\"headerlink\" title=\"this绑定优先级\"></a>this绑定优先级</h1><p>​    显式绑定 &gt; 隐式绑定 &gt; 默认绑定</p>\n<p>​    new绑定 &gt; 隐式绑定 &gt; 默认绑定</p>\n",
            "tags": [
                "javascript"
            ]
        },
        {
            "id": "http://example.com/2022/09/17/zi-zu-jian-xiang-fu-zu-jian-chuan-zhi-this.emit-fu-zu-jian-jie-shou-fang-fa/",
            "url": "http://example.com/2022/09/17/zi-zu-jian-xiang-fu-zu-jian-chuan-zhi-this.emit-fu-zu-jian-jie-shou-fang-fa/",
            "title": "子组件向父组件传值this.$emit，父组件接收方法",
            "date_published": "2022-09-17T02:43:20.091Z",
            "content_html": "<p>子组件名字为ImageUpload</p>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">handleUploadSuccess</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input\"</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span>“方法名”<span class=\"token punctuation\">,</span> 参数<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>父组件接收方法</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"> <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item label<span class=\"token operator\">=</span><span class=\"token string\">\"菜品图片:\"</span> prop<span class=\"token operator\">=</span><span class=\"token string\">\"picUrl\"</span> <span class=\"token operator\">&gt;</span>\n   <span class=\"token operator\">&lt;</span>ImageUpload @input<span class=\"token operator\">=</span><span class=\"token string\">\"test\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item<span class=\"token operator\">&gt;</span>\n\nmethods<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "vue",
                "javascript"
            ]
        }
    ]
}