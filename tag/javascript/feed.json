{
    "version": "https://jsonfeed.org/version/1",
    "title": "FeiFei • All posts by \"javascript\" tag",
    "description": "FeiFei 的博客",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/10/13/ce-shi-ce-shi/",
            "url": "http://example.com/2022/10/13/ce-shi-ce-shi/",
            "title": "测试",
            "date_published": "2022-10-13T12:11:42.965Z",
            "content_html": "<h1 id=\"产生的原因：\"><a href=\"#产生的原因：\" class=\"headerlink\" title=\"产生的原因：\"></a>产生的原因：</h1><p>写代码时一般使用设备独立像素来对页面布局。而在设备像素比大于1的屏幕上，我们写的1px实际上是被多个物理像素渲染，这就会出现1px在有些屏幕上看起来很粗的现象：</p>\n<span id=\"more\"></span>\n<h1 id=\"解决方法：\"><a href=\"#解决方法：\" class=\"headerlink\" title=\"解决方法：\"></a>解决方法：</h1><h2 id=\"小数值px\"><a href=\"#小数值px\" class=\"headerlink\" title=\"小数值px\"></a>小数值px</h2><p>设备像素比devicePixelRadio=2=物理像素/css像素=1px/0.5px，物理像素为1px，设置设备像素比=2，css像素设为0.5px，详情如下：<br><img src=\"https://img-blog.csdnimg.cn/6d8569f7209c489c920aea511361e6b1.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/e769e277e5044965b59ee54e78308db2.png\" alt=\"在这里插入图片描述\"></p>\n<pre><code>缺点：\n        兼容性差，目前之余IOS8+才支持，在IOS7及其以下、安卓系统都是显示0px。\n</code></pre>\n<h2 id=\"background-image，多背景渐变\"><a href=\"#background-image，多背景渐变\" class=\"headerlink\" title=\"background-image，多背景渐变\"></a>background-image，多背景渐变</h2><pre><code>设置1px的渐变背景\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/91d9655f372740bfbd77901cef44b1b9.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/df95fd164b0540d9b9808ca5be14e302.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"CSS3-box-shadow\"><a href=\"#CSS3-box-shadow\" class=\"headerlink\" title=\"CSS3,box-shadow\"></a>CSS3,box-shadow</h2><pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.shadow</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">-wedit-box-shadow</span><span class=\"token punctuation\">:</span><span class=\"token number\">0</span> <span class=\"token number\">1</span>px <span class=\"token number\">1</span>px -<span class=\"token number\">1</span>px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span>, <span class=\"token number\">0</span>, <span class=\"token number\">0</span> ,<span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span>px <span class=\"token number\">1</span>px -<span class=\"token number\">1</span>px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span>, <span class=\"token number\">0</span>, <span class=\"token number\">0</span> ,<span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/5a790dd6e9de4eceb0d3ae0086cb3d1e.png\" alt=\"在这里插入图片描述\"></p>\n<pre><code>缺点：\n    颜色不好配置\n</code></pre>\n<h2 id=\"viewport与rem结合\"><a href=\"#viewport与rem结合\" class=\"headerlink\" title=\"viewport与rem结合\"></a>viewport与rem结合</h2><pre><code>当设备像素比=2，（中和一下，使物理像素=设备独立像素）\n</code></pre>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"initial-scale=0.5,maximum-scale=0.5,minimum-scale=0.5,user-scalable=no\"</span><span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/cb7c14e4c2a442398fbdba43273879b2.png\" alt=\"在这里插入图片描述\"></p>\n<p>当设备像素比=3，将页面缩放1/3倍，</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"initial-scale=0.3333333333333333, maximum-scale=0.3333333333333333, minimum-scale=0.3333333333333333, user-scalable=no\"</span><span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>任意设备像素比</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"> <span class=\"token keyword\">const</span> scale <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> window<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> viewport <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'meta[name=\"viewport\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>viewport<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                viewport <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'meta'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                viewport<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'viewport'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                window<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>viewport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            viewport<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'width=device-width,user-scalable=no,initial-scale='</span> <span class=\"token operator\">+</span> scale <span class=\"token operator\">+</span> <span class=\"token string\">',maximum-scale='</span> <span class=\"token operator\">+</span> scale <span class=\"token operator\">+</span> <span class=\"token string\">',minimum-scale='</span> <span class=\"token operator\">+</span> scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>意味着所有页面都需要用物理像素写，不现实，可以用flexible，vm,vh来帮助适配</p>\n<h2 id=\"before，-after，transform（建议使用）\"><a href=\"#before，-after，transform（建议使用）\" class=\"headerlink\" title=\":before，:after，transform（建议使用）\"></a>:before，:after，transform（建议使用）</h2><pre><code>原理：先把原来的border去掉，然后用:before,:after重做border，并 transform 的 scale 缩小一半，原先的元素相对定位，新做的 border 绝对定位。单条border样式：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/51c044d048ca471cbba1ee191a079602.png)\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/b22f3b580ef24d9b8bdb4dd16c3c543f.png\" alt=\"在这里插入图片描述\"></p>\n<p>四条border样式：<br><img src=\"https://img-blog.csdnimg.cn/7018f0ec3639450bade5c58b41591e8a.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/0e730e901fdc468189611efcc30d72ab.png\" alt=\"在这里插入图片描述\"></p>\n<pre><code>优点：\n        所有场景都能满足\n        支持圆角\n缺点：\n        对于已经使用伪类的元素，可能需要多层嵌套\n</code></pre>\n<h2 id=\"svg（推荐使用）\"><a href=\"#svg（推荐使用）\" class=\"headerlink\" title=\"svg（推荐使用）\"></a>svg（推荐使用）</h2><pre><code>借助PostCSS的postcss-write-svg我们能直接使用border-image和background-image创建svg的1px边框\n![在这里插入图片描述](https://img-blog.csdnimg.cn/634a5b45e770438d8402f98ccf3c3546.png)\n</code></pre>\n<h2 id=\"border-image\"><a href=\"#border-image\" class=\"headerlink\" title=\"border-image\"></a>border-image</h2><p>准备一张符合要求的border-image<br>    <img src=\"https://img-blog.csdnimg.cn/183e0b5cb20540e8ad0a6885c5c186f1.png\" alt=\"在这里插入图片描述\"></p>\n<p>通常手机端的页面设计稿都是放大一倍的，如：为适应iphone retina，设计稿会设计成750*1334的分辨率，图片按照2倍大小切出来，在手机端看着就不会虚化，非常清晰。 同样，在使用border-image时，将border设计为物理1px，如下：</p>\n<pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.border-image-1px</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span>px <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-image</span><span class=\"token punctuation\">:</span><span class=\"token url\">url(linenew.png)</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span> stretch<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上文是把border设置在边框的底部，所以使用的图片是2px高，上部的1px颜色为透明，下部的1px使用视觉规定的border的颜色。<br>如果边框底部和顶部同时需要border，可以使用下面的border-image：<br><img src=\"https://img-blog.csdnimg.cn/5af4d4c0fea343169c710f59ffebc536.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.border-image-1px</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>px <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">-wekit-border-image</span><span class=\"token punctuation\">:</span><span class=\"token url\">url(linenew.png)</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span> stretch<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-image</span><span class=\"token punctuation\">:</span><span class=\"token url\">url(linenew.png)</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span> stretch<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在非视网膜屏上会出现border显示不出来的情况，需要做一下兼容：</p>\n<pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.border-image-1px</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>px solid <span class=\"token hexcode\">#666</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> only screen and <span class=\"token punctuation\">(</span><span class=\"token property\">-wekit-min-device-pixel-radio</span><span class=\"token punctuation\">:</span>2<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token selector\"><span class=\"token class\">.border-image-1px</span> </span><span class=\"token punctuation\">{</span>\n        <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">border-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span>px <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token property\">-wekit-border-image</span><span class=\"token punctuation\">:</span><span class=\"token url\">url(linenew.png)</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span> stretch<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">border-image</span><span class=\"token punctuation\">:</span><span class=\"token url\">url(linenew.png)</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span> stretch<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre><code>优点：\n    可以设置单条,多条边框，没有性能瓶颈的问题\n缺点：\n    修改颜色麻烦, 需要替换图片；圆角需要特殊处理，并且边缘会模糊\n</code></pre>\n<h2 id=\"background-image\"><a href=\"#background-image\" class=\"headerlink\" title=\"background-image\"></a>background-image</h2><pre><code>与上类似，只不过将border模拟在背景上\n</code></pre>\n<pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.background-image-1px</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token url\">url(linenew.png)</span> repeat-x left bottom<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">-wekit-background-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100%</span> <span class=\"token number\">1</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100%</span> <span class=\"token number\">1</span>px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre><code>优点：\n    可以设置单条,多条边框，没有性能瓶颈的问题。\n缺点：\n    修改颜色麻烦, 需要替换图片；圆角需要特殊处理，并且边缘会模糊。\n</code></pre>\n",
            "tags": [
                "javascript",
                "移动端",
                "css"
            ]
        },
        {
            "id": "http://example.com/2022/10/12/yi-dong-duan-1px-wen-ti-jie-jue-fang-an/",
            "url": "http://example.com/2022/10/12/yi-dong-duan-1px-wen-ti-jie-jue-fang-an/",
            "title": "移动端1px问题解决方案",
            "date_published": "2022-10-12T07:02:03.340Z",
            "content_html": "<h1 id=\"产生的原因：\"><a href=\"#产生的原因：\" class=\"headerlink\" title=\"产生的原因：\"></a>产生的原因：</h1><p>写代码时一般使用设备独立像素来对页面布局。而在设备像素比大于1的屏幕上，我们写的1px实际上是被多个物理像素渲染，这就会出现1px在有些屏幕上看起来很粗的现象：</p>\n<span id=\"more\"></span>\n<h1 id=\"解决方法：\"><a href=\"#解决方法：\" class=\"headerlink\" title=\"解决方法：\"></a>解决方法：</h1><h2 id=\"小数值px\"><a href=\"#小数值px\" class=\"headerlink\" title=\"小数值px\"></a>小数值px</h2><p>设备像素比devicePixelRadio=2=物理像素/css像素=1px/0.5px，物理像素为1px，设置设备像素比=2，css像素设为0.5px，详情如下：<br><img src=\"https://img-blog.csdnimg.cn/6d8569f7209c489c920aea511361e6b1.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/e769e277e5044965b59ee54e78308db2.png\" alt=\"在这里插入图片描述\"></p>\n<pre><code>缺点：\n        兼容性差，目前之余IOS8+才支持，在IOS7及其以下、安卓系统都是显示0px。\n</code></pre>\n<h2 id=\"background-image，多背景渐变\"><a href=\"#background-image，多背景渐变\" class=\"headerlink\" title=\"background-image，多背景渐变\"></a>background-image，多背景渐变</h2><pre><code>设置1px的渐变背景\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/91d9655f372740bfbd77901cef44b1b9.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/df95fd164b0540d9b9808ca5be14e302.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"CSS3-box-shadow\"><a href=\"#CSS3-box-shadow\" class=\"headerlink\" title=\"CSS3,box-shadow\"></a>CSS3,box-shadow</h2><pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.shadow</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">-wedit-box-shadow</span><span class=\"token punctuation\">:</span><span class=\"token number\">0</span> <span class=\"token number\">1</span>px <span class=\"token number\">1</span>px -<span class=\"token number\">1</span>px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span>, <span class=\"token number\">0</span>, <span class=\"token number\">0</span> ,<span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span>px <span class=\"token number\">1</span>px -<span class=\"token number\">1</span>px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span>, <span class=\"token number\">0</span>, <span class=\"token number\">0</span> ,<span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/5a790dd6e9de4eceb0d3ae0086cb3d1e.png\" alt=\"在这里插入图片描述\"></p>\n<pre><code>缺点：\n    颜色不好配置\n</code></pre>\n<h2 id=\"viewport与rem结合\"><a href=\"#viewport与rem结合\" class=\"headerlink\" title=\"viewport与rem结合\"></a>viewport与rem结合</h2><pre><code>当设备像素比=2，（中和一下，使物理像素=设备独立像素）\n</code></pre>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"initial-scale=0.5,maximum-scale=0.5,minimum-scale=0.5,user-scalable=no\"</span><span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/cb7c14e4c2a442398fbdba43273879b2.png\" alt=\"在这里插入图片描述\"></p>\n<p>当设备像素比=3，将页面缩放1/3倍，</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"initial-scale=0.3333333333333333, maximum-scale=0.3333333333333333, minimum-scale=0.3333333333333333, user-scalable=no\"</span><span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>任意设备像素比</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"> <span class=\"token keyword\">const</span> scale <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> window<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> viewport <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'meta[name=\"viewport\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>viewport<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                viewport <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'meta'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                viewport<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'viewport'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                window<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>viewport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            viewport<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'width=device-width,user-scalable=no,initial-scale='</span> <span class=\"token operator\">+</span> scale <span class=\"token operator\">+</span> <span class=\"token string\">',maximum-scale='</span> <span class=\"token operator\">+</span> scale <span class=\"token operator\">+</span> <span class=\"token string\">',minimum-scale='</span> <span class=\"token operator\">+</span> scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>意味着所有页面都需要用物理像素写，不现实，可以用flexible，vm,vh来帮助适配</p>\n<h2 id=\"before，-after，transform（建议使用）\"><a href=\"#before，-after，transform（建议使用）\" class=\"headerlink\" title=\":before，:after，transform（建议使用）\"></a>:before，:after，transform（建议使用）</h2><pre><code>原理：先把原来的border去掉，然后用:before,:after重做border，并 transform 的 scale 缩小一半，原先的元素相对定位，新做的 border 绝对定位。单条border样式：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/51c044d048ca471cbba1ee191a079602.png)\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/b22f3b580ef24d9b8bdb4dd16c3c543f.png\" alt=\"在这里插入图片描述\"></p>\n<p>四条border样式：<br><img src=\"https://img-blog.csdnimg.cn/7018f0ec3639450bade5c58b41591e8a.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/0e730e901fdc468189611efcc30d72ab.png\" alt=\"在这里插入图片描述\"></p>\n<pre><code>优点：\n        所有场景都能满足\n        支持圆角\n缺点：\n        对于已经使用伪类的元素，可能需要多层嵌套\n</code></pre>\n<h2 id=\"svg（推荐使用）\"><a href=\"#svg（推荐使用）\" class=\"headerlink\" title=\"svg（推荐使用）\"></a>svg（推荐使用）</h2><pre><code>借助PostCSS的postcss-write-svg我们能直接使用border-image和background-image创建svg的1px边框\n![在这里插入图片描述](https://img-blog.csdnimg.cn/634a5b45e770438d8402f98ccf3c3546.png)\n</code></pre>\n<h2 id=\"border-image\"><a href=\"#border-image\" class=\"headerlink\" title=\"border-image\"></a>border-image</h2><p>准备一张符合要求的border-image<br>    <img src=\"https://img-blog.csdnimg.cn/183e0b5cb20540e8ad0a6885c5c186f1.png\" alt=\"在这里插入图片描述\"></p>\n<p>通常手机端的页面设计稿都是放大一倍的，如：为适应iphone retina，设计稿会设计成750*1334的分辨率，图片按照2倍大小切出来，在手机端看着就不会虚化，非常清晰。 同样，在使用border-image时，将border设计为物理1px，如下：</p>\n<pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.border-image-1px</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span>px <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-image</span><span class=\"token punctuation\">:</span><span class=\"token url\">url(linenew.png)</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span> stretch<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上文是把border设置在边框的底部，所以使用的图片是2px高，上部的1px颜色为透明，下部的1px使用视觉规定的border的颜色。<br>如果边框底部和顶部同时需要border，可以使用下面的border-image：<br><img src=\"https://img-blog.csdnimg.cn/5af4d4c0fea343169c710f59ffebc536.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.border-image-1px</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>px <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">-wekit-border-image</span><span class=\"token punctuation\">:</span><span class=\"token url\">url(linenew.png)</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span> stretch<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-image</span><span class=\"token punctuation\">:</span><span class=\"token url\">url(linenew.png)</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span> stretch<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在非视网膜屏上会出现border显示不出来的情况，需要做一下兼容：</p>\n<pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.border-image-1px</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>px solid <span class=\"token hexcode\">#666</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> only screen and <span class=\"token punctuation\">(</span><span class=\"token property\">-wekit-min-device-pixel-radio</span><span class=\"token punctuation\">:</span>2<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token selector\"><span class=\"token class\">.border-image-1px</span> </span><span class=\"token punctuation\">{</span>\n        <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">border-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span>px <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token property\">-wekit-border-image</span><span class=\"token punctuation\">:</span><span class=\"token url\">url(linenew.png)</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span> stretch<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">border-image</span><span class=\"token punctuation\">:</span><span class=\"token url\">url(linenew.png)</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span> stretch<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre><code>优点：\n    可以设置单条,多条边框，没有性能瓶颈的问题\n缺点：\n    修改颜色麻烦, 需要替换图片；圆角需要特殊处理，并且边缘会模糊\n</code></pre>\n<h2 id=\"background-image\"><a href=\"#background-image\" class=\"headerlink\" title=\"background-image\"></a>background-image</h2><pre><code>与上类似，只不过将border模拟在背景上\n</code></pre>\n<pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.background-image-1px</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token url\">url(linenew.png)</span> repeat-x left bottom<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">-wekit-background-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100%</span> <span class=\"token number\">1</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100%</span> <span class=\"token number\">1</span>px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre><code>优点：\n    可以设置单条,多条边框，没有性能瓶颈的问题。\n缺点：\n    修改颜色麻烦, 需要替换图片；圆角需要特殊处理，并且边缘会模糊。\n</code></pre>\n",
            "tags": [
                "javascript",
                "移动端",
                "css"
            ]
        },
        {
            "id": "http://example.com/2022/10/12/js-zhong-lei-yu-gou-zao-han-shu/",
            "url": "http://example.com/2022/10/12/js-zhong-lei-yu-gou-zao-han-shu/",
            "title": "js中类与构造函数",
            "date_published": "2022-10-12T06:59:44.832Z",
            "content_html": "<h1 id=\"js中类的概念：\"><a href=\"#js中类的概念：\" class=\"headerlink\" title=\"js中类的概念：\"></a>js中类的概念：</h1><p>把具有共同性质的事务归于一类，得到一个抽象概念，就是类。<br>类的数据类型就是函数，类本身指向构造函数</p>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Point</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\" spellcheck=\"true\">//...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">typeof</span> Point  <span class=\"token comment\" spellcheck=\"true\">//\"function\"</span>\nPoint <span class=\"token operator\">===</span> Point<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>constructor\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"类的写法\"><a href=\"#类的写法\" class=\"headerlink\" title=\"类的写法\"></a>类的写法</h1><pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Point</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'('</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> <span class=\"token string\">', '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> <span class=\"token string\">')'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这种新的写法，本质上与下面代码写法是一样的<br><img src=\"https://img-blog.csdnimg.cn/3f82b28a0d614b918a4ad4a0c1445d46.png\" alt=\"在这里插入图片描述\"><br>构造函数的prototype属性，在es6的类中依然存在，类中的所有方法都是定义在prototype属性上的</p>\n<h1 id=\"使用类的原因：\"><a href=\"#使用类的原因：\" class=\"headerlink\" title=\"使用类的原因：\"></a>使用类的原因：</h1><p>类相当于一个语法糖，让对象原型的写法更加清晰，更像面向对象的编程</p>\n<h1 id=\"使用构造函数初始化对象的原理\"><a href=\"#使用构造函数初始化对象的原理\" class=\"headerlink\" title=\"使用构造函数初始化对象的原理\"></a>使用构造函数初始化对象的原理</h1><h2 id=\"理解new操作符：\"><a href=\"#理解new操作符：\" class=\"headerlink\" title=\"理解new操作符：\"></a>理解new操作符：</h2><p> function   F(){}<br> new F();<br>过程：<br>创建一个空对象，作为将要返回的实例对象<br>将空对象的原型指向构造函数的prototype属性<br>将空对象赋值给构造函数内部的this关键字，也就是this会指向实例对象<br>开始执行函数内部代码</p>\n<h2 id=\"根据new操作符理解constructor初始化对象的原理：\"><a href=\"#根据new操作符理解constructor初始化对象的原理：\" class=\"headerlink\" title=\"根据new操作符理解constructor初始化对象的原理：\"></a>根据new操作符理解constructor初始化对象的原理：</h2><p> 直接对类使用new命令，跟构造函数的用法一致。<br> 在类的实例上调用方法，实际上就是调用原型上的方法（根据上面function声明的构造函数的写法可知）。所以在实例上调用constructor 方法，实际上就是调用原型上的constructor 方法：</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nb<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">===</span> B<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>constructor <span class=\"token comment\" spellcheck=\"true\">// true</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>new操作符 最主要的是将this从原始函数指向实例对象，而实例对象的constructor 是等于类的原型上的constructor 。比如上面代码，此时B原型上的constructor的this，就指向实例对象b<br>所以构造方法的this关键字则代表实例对象。</p>\n<p>参考链接：<br><a href=\"https://blog.csdn.net/weixin_34384915/article/details/91374594?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165119766216782395378874%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=165119766216782395378874&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-24-91374594.142%5Ev9%5Econtrol,157%5Ev4%5Econtrol&amp;utm_term=%E7%B1%BB%E7%9A%84%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0&amp;spm=1018.2226.3001.4187\">https://blog.csdn.net/weixin</a></p>\n",
            "tags": [
                "javascript"
            ]
        },
        {
            "id": "http://example.com/2022/10/12/element-ui-notification-tong-zhi-wen-zi-huan-xing/",
            "url": "http://example.com/2022/10/12/element-ui-notification-tong-zhi-wen-zi-huan-xing/",
            "title": "element-ui Notification 通知文字换行",
            "date_published": "2022-10-12T06:56:12.321Z",
            "content_html": "<p>换行代码如下：</p>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> success<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> fail<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> o <span class=\"token keyword\">in</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>ToSuccess<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    success <span class=\"token operator\">+</span><span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>ToSuccess<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> p <span class=\"token keyword\">in</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>ToFailure<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    fail <span class=\"token operator\">+</span><span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>ToFailure<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'转入成功的人：'</span> <span class=\"token operator\">+</span> success<span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'转入失败的人：'</span> <span class=\"token operator\">+</span> fail<span class=\"token punctuation\">]</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> newData <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">const</span> h <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$createElement\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    newData<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">null</span> <span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>     \n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    title<span class=\"token punctuation\">:</span> <span class=\"token string\">'提示'</span><span class=\"token punctuation\">,</span>\n    message<span class=\"token punctuation\">:</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">,</span>newData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    duration<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>使用vue的$<strong>createElement</strong>方法，方法的参数和含义用法如下：</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">class</span>：‘name’<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n<span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'some messages...some messages...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'some messages...some messages...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>第一个参数：标签<br>第二个参数：标签属性，比如class，style等<br>第三个参数：标签的内容，（也可以生成多个标签，或者一个标签的多个值）<br><img src=\"https://img-blog.csdnimg.cn/b2f7d964fd0d456eb643c07e0dadd53c.png\" alt=\"在这里插入图片描述\"></p>\n<p>参考链接：<br><a href=\"https://www.jianshu.com/p/109c8e0077c0\">https://www.jianshu.com/p/109c8e0077c0</a><br><a href=\"https://blog.csdn.net/xiaoma19941027/article/details/107769723\">https://blog.csdn.net/xiaoma19941027/article/details/107769723</a></p>\n",
            "tags": [
                "element ui",
                "vue",
                "javascript"
            ]
        },
        {
            "id": "http://example.com/2022/10/12/el-upload-shang-chuan-wen-jian-shi-xian-shi-pin-shang-chuan/",
            "url": "http://example.com/2022/10/12/el-upload-shang-chuan-wen-jian-shi-xian-shi-pin-shang-chuan/",
            "title": "el-upload上传文件实现视频上传",
            "date_published": "2022-10-12T06:51:00.695Z",
            "content_html": "<p>如图所示：</p>\n<span id=\"more\"></span>\n<p><img src=\"https://img-blog.csdnimg.cn/c77982cb3a6e43c78db778b0fe70362c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAcXFfNDU0ODk2NjU=,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>上传成功后，下面的滚动条和文件名消失</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"> <span class=\"token operator\">&lt;</span>el-form-item label<span class=\"token operator\">=</span><span class=\"token string\">\"上传视频\"</span> prop<span class=\"token operator\">=</span><span class=\"token string\">\"videoPath\"</span> :required<span class=\"token operator\">=</span><span class=\"token string\">\"videoTo\"</span><span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span>el-upload\n            ref<span class=\"token operator\">=</span><span class=\"token string\">\"video\"</span>\n            class<span class=\"token operator\">=</span><span class=\"token string\">\"upload-demo\"</span>\n            v-model<span class=\"token operator\">=</span><span class=\"token string\">\"form.videoPath\"</span>\n            drag\n            action<span class=\"token operator\">=</span><span class=\"token string\">\"/api/EToolFile\"</span>\n            :multiple<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span>\n            :before-upload<span class=\"token operator\">=</span><span class=\"token string\">\"beforeUploadVideo\"</span>\n            :http-request<span class=\"token operator\">=</span><span class=\"token string\">\"UploadVideo\"</span>\n          <span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>i class<span class=\"token operator\">=</span><span class=\"token string\">\"el-icon-upload\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>/i<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>div class<span class=\"token operator\">=</span><span class=\"token string\">\"el-upload__text\"</span><span class=\"token operator\">&gt;</span>\n              将文件拖到此处，或<span class=\"token operator\">&lt;</span>em<span class=\"token operator\">&gt;</span>点击上传<span class=\"token operator\">&lt;</span>/em<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>/div<span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span>/el-upload<span class=\"token operator\">&gt;</span>\n          //进度条\n          <span class=\"token operator\">&lt;</span>el-progress\n            v-show<span class=\"token operator\">=</span><span class=\"token string\">\"progressFlag\"</span>\n            :percentage<span class=\"token operator\">=</span><span class=\"token string\">\"loadProgress\"</span>\n          <span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>/el-progress<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>/el-form-item<span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      progressFlag: false,\n      loadProgress: 0,\n     <span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>method中的方法</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">//视频上传\n    UploadVideo<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      this.form.videoPath <span class=\"token operator\">=</span> URL.createObjectURL<span class=\"token punctuation\">(</span>params.file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      this.progressFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      this.loadProgress <span class=\"token operator\">=</span> 0<span class=\"token punctuation\">;</span>\n      const interval <span class=\"token operator\">=</span> setInterval<span class=\"token punctuation\">((</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>this.loadProgress <span class=\"token operator\">&gt;=</span> 99<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          clearInterval<span class=\"token punctuation\">(</span>interval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        this.loadProgress +<span class=\"token operator\">=</span> 1<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>, 20<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      upload<span class=\"token punctuation\">(</span><span class=\"token string\">\"/api/EToolFile\"</span>, params.file<span class=\"token punctuation\">)</span>.then<span class=\"token punctuation\">((</span>res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n        console.log<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        this.form.videoPath <span class=\"token operator\">=</span> res.data.data.name<span class=\"token punctuation\">;</span>\n        this.progressFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        this.loadProgress <span class=\"token operator\">=</span> 100<span class=\"token punctuation\">;</span>\n        this.<span class=\"token variable\">$message</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          type: <span class=\"token string\">\"success\"</span>,\n          message: <span class=\"token string\">\"上传成功!\"</span>,\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        // 清空上传列表\n        this.<span class=\"token variable\">$refs</span>.video.clearFiles<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>,\n    beforeUploadVideo<span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      const isLt30M <span class=\"token operator\">=</span> file.size / 1024 / 1024 <span class=\"token operator\">&lt;</span> 30<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">[</span>\n          <span class=\"token string\">\"video/mp4\"</span>,\n          <span class=\"token string\">\"video/ogg\"</span>,\n          <span class=\"token string\">\"video/flv\"</span>,\n          <span class=\"token string\">\"video/avi\"</span>,\n          <span class=\"token string\">\"video/wmv\"</span>,\n          <span class=\"token string\">\"video/rmvb\"</span>,\n        <span class=\"token punctuation\">]</span>.indexOf<span class=\"token punctuation\">(</span>file.type<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> -1\n      <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        this.<span class=\"token variable\">$message</span>.error<span class=\"token punctuation\">(</span><span class=\"token string\">\"请上传正确的视频格式\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isLt30M<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        this.<span class=\"token variable\">$message</span>.error<span class=\"token punctuation\">(</span><span class=\"token string\">\"上传视频大小不能超过30MB哦!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>,\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "element ui",
                "vue",
                "javascript"
            ]
        },
        {
            "id": "http://example.com/2022/10/12/el-select-shi-xian-dong-tai-xuan-ze-xuan-xiang/",
            "url": "http://example.com/2022/10/12/el-select-shi-xian-dong-tai-xuan-ze-xuan-xiang/",
            "title": "el-select实现动态选择选项",
            "date_published": "2022-10-12T06:18:39.301Z",
            "content_html": "<p>首先data里面声明数组</p>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"> <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        selectShop<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后在el-option里面写到</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"> <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>option v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"item in selectShop\"</span>\n    <span class=\"token punctuation\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"item.id\"</span>\n    <span class=\"token punctuation\">:</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"item.id\"</span>\n    <span class=\"token punctuation\">:</span>label<span class=\"token operator\">=</span><span class=\"token string\">\"item.name\"</span>\n <span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>完整代码</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"> <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item label<span class=\"token operator\">=</span><span class=\"token string\">\"店铺:\"</span> <span class=\"token punctuation\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"selectShop\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>select\n    <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"dialogSelect\"</span>\n    v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"form.shopId\"</span>\n    placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"选择店铺\"</span>\n    clearable\n    <span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>option v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"item in selectShop\"</span>\n            <span class=\"token punctuation\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"item.id\"</span>\n            <span class=\"token punctuation\">:</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"item.id\"</span>\n            <span class=\"token punctuation\">:</span>label<span class=\"token operator\">=</span><span class=\"token string\">\"item.name\"</span>\n        <span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>option<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>select<span class=\"token operator\">&gt;</span>\n <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item<span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "element ui",
                "vue",
                "javascript"
            ]
        },
        {
            "id": "http://example.com/2022/09/23/el-select-shi-xian-dong-tai-cong-hou-tai-huo-qu-bian-li-xie-chu-xuan-xiang/",
            "url": "http://example.com/2022/09/23/el-select-shi-xian-dong-tai-cong-hou-tai-huo-qu-bian-li-xie-chu-xuan-xiang/",
            "title": "el-select实现动态从后台获取，遍历写出选项",
            "date_published": "2022-09-23T12:58:25.134Z",
            "content_html": "<p>首先，在data中声明一个值</p>\n<span id=\"more\"></span>\n\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      dishesInfoList<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p> 其次，在查询遍历列表信息的接口中获取数据</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">listDishesInfo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queryParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>response <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dishesInfoList <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>之后，在el-form中写上 : data；在el-select中写上v-model（写不写都行）；<br>在el-option里面写上</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\">v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"item in dishesInfoList\"</span>\n    <span class=\"token punctuation\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"item.id\"</span>\n    <span class=\"token punctuation\">:</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"item.shopId\"</span>\n    <span class=\"token punctuation\">:</span>label<span class=\"token operator\">=</span><span class=\"token string\">\"item.shopId\"</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>具体代码如下：</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>form ref<span class=\"token operator\">=</span><span class=\"token string\">\"form\"</span>  <span class=\"token punctuation\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"dishesInfoList\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>select\n        v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"dishesInfoList.shopId\"</span><span class=\"token comment\" spellcheck=\"true\">//在这里写上</span>\n        placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"选择店铺\"</span>\n        clearable\n        @keyup<span class=\"token punctuation\">.</span>enter<span class=\"token punctuation\">.</span>native<span class=\"token operator\">=</span><span class=\"token string\">\"handleQuery\"</span>\n    <span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>option v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"item in dishesInfoList\"</span>\n            <span class=\"token punctuation\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"item.id\"</span>\n            <span class=\"token punctuation\">:</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"item.shopId\"</span>\n            <span class=\"token punctuation\">:</span>label<span class=\"token operator\">=</span><span class=\"token string\">\"item.shopId\"</span>\n        <span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>option<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>select<span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "element ui",
                "vue",
                "javascript"
            ]
        },
        {
            "id": "http://example.com/2022/09/20/this-yuan-li/",
            "url": "http://example.com/2022/09/20/this-yuan-li/",
            "title": "this原理",
            "date_published": "2022-09-20T12:39:03.848Z",
            "content_html": "<p>this是一个指针型变量，它指向当前函数的运行环境。</p>\n<span id=\"more\"></span>\n<p>1.内存的数据结构</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> foo<span class=\"token punctuation\">:</span>  <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://www.wangbase.com/blogimg/asset/201806/bg2018061801.png\" alt=\"img\"></p>\n<p><strong><img src=\"https://www.wangbase.com/blogimg/asset/201806/bg2018061802.png\" alt=\"img\"></strong></p>\n<p>2.函数</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> foo<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>引擎会将函数单独保存在内存中，然后再将函数的地址赋值给<code>foo</code>属性的<code>value</code>属性。</p>\n<p><img src=\"https://www.wangbase.com/blogimg/asset/201806/bg2018061803.png\" alt=\"img\"></p>\n<p>由于函数是一个单独的值，所以它可以在不同的环境（上下文）执行。</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"> <span class=\"token keyword\">var</span> f <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> f<span class=\"token punctuation\">:</span> f <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n \n <span class=\"token comment\" spellcheck=\"true\">// 单独执行</span>\n <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n \n <span class=\"token comment\" spellcheck=\"true\">// obj 环境执行</span>\n obj<span class=\"token punctuation\">.</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>3.环境变量</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> f <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>函数体里面使用了变量<code>x</code>。该变量由运行环境提供。</p>\n<p>上面代码，函数体内的<code>this.x</code>就是当前运行环境的x</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> f <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  f<span class=\"token punctuation\">:</span> f<span class=\"token punctuation\">,</span>\n  x<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 单独执行</span>\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// obj 环境执行</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上面代码中，函数<code>f</code>在全局环境执行，<code>this.x</code>指向全局环境的<code>x</code>。</p>\n<p><img src=\"https://www.wangbase.com/blogimg/asset/201806/bg2018061804.png\" alt=\"img\"></p>\n<p>在<code>obj</code>环境执行，<code>this.x</code>指向<code>obj.x</code>。</p>\n<p><img src=\"https://www.wangbase.com/blogimg/asset/201806/bg2018061805.png\" alt=\"img\"></p>\n<h1 id=\"this的指向问题\"><a href=\"#this的指向问题\" class=\"headerlink\" title=\"this的指向问题\"></a>this的指向问题</h1><p>在不同的场景中调用同一个函数，this的指向也可能会发生变化，但是它永远指向其所在函数的真实调用者（谁调用就指向谁）；如果没有调用者，this就指向全局对象window。</p>\n<p><strong>全局上下文</strong></p>\n<p>非严格模式和严格模式中this都是指向顶层对象（浏览器中是<code>window</code>）</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> window \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token string\">'use strict'</span>\n<span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> window<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'若川'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>函数上下文</strong></p>\n<h2 id=\"普通函数调用模式\"><a href=\"#普通函数调用模式\" class=\"headerlink\" title=\"普通函数调用模式\"></a>普通函数调用模式</h2><p>​    非严格模式下，默认绑定的this指向<code>window</code>。</p>\n<p>​    严格模式下，默认绑定的this指向<code>undefined</code>。</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token comment\" spellcheck=\"true\">// 非严格模式</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'window'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> doSth <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">doSth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// 'window'</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token comment\" spellcheck=\"true\">// 非严格模式</span>\n<span class=\"token keyword\">let</span> name2 <span class=\"token operator\">=</span> <span class=\"token string\">'window2'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> doSth2 <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">doSth2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\" spellcheck=\"true\">// true, undefined</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>​    <code>let</code>没有给顶层对象中（浏览器是window）添加属性，<code>window.name2和window.doSth2</code>都是<code>undefined</code>。</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token comment\" spellcheck=\"true\">// 严格模式</span>\n<span class=\"token string\">'use strict'</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'window'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> doSth <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> <span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">doSth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// true，// 报错，因为this是undefined</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>回调函数，其实也是普通函数调用模式。</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\">　　<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"The Window\"</span><span class=\"token punctuation\">;</span>\n\n　　<span class=\"token keyword\">var</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n　　　　name <span class=\"token punctuation\">:</span> <span class=\"token string\">\"My Object\"</span><span class=\"token punctuation\">,</span>\n\n　　　　getNameFunc <span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n　　　　　　<span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n　　　　　　　　<span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n　　　　　　<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n　　　　<span class=\"token punctuation\">}</span>\n\n　　<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">　　alert</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">.</span><span class=\"token function\">getNameFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token comment\" spellcheck=\"true\">//相当于</span>\n<span class=\"token keyword\">var</span> f <span class=\"token operator\">=</span> object<span class=\"token punctuation\">.</span><span class=\"token function\">getNameFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\" spellcheck=\"true\">//返回一个匿名函数</span>\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//此时调用者是window，所以this会指向window</span>\n解决：\ngetNameFunc <span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> that <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> that<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>     <span class=\"token comment\" spellcheck=\"true\">//更改匿名函数中的this</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>匿名函数的执行环境具有全局性，所以匿名函数this指向window</p>\n<h2 id=\"箭头函数调用模式\"><a href=\"#箭头函数调用模式\" class=\"headerlink\" title=\"箭头函数调用模式\"></a>箭头函数调用模式</h2><p>先看箭头函数和普通函数的重要区别：</p>\n<p>1、没有自己的<code>this</code>、<code>super</code>、<code>arguments</code>和<code>new.target</code>绑定。</p>\n<p>​      也就是说无法通过<code>call</code>、<code>apply</code>、<code>bind</code>绑定箭头函数的<code>this</code></p>\n<p>2、不能使用<code>new</code>来调用。 3、没有原型对象。 4、不可以改变<code>this</code>的绑定。 5、形参名称不能重复。</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'window'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> student <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'若川'</span><span class=\"token punctuation\">,</span>\n    doSth<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> arrowDoSth <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">arrowDoSth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    arrowDoSth2<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nstudent<span class=\"token punctuation\">.</span><span class=\"token function\">doSth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// '若川'</span>\nstudent<span class=\"token punctuation\">.</span><span class=\"token function\">arrowDoSth2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// 'window'</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>箭头函数外的this是缓存的该箭头函数上层的普通函数的this。如果没有普通函数，则是全局对象（浏览器中则是window）。</p>\n<p>因此我们可以修改外层函数this指向达到间接修改箭头函数this的目的。</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'听风是风'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'时间跳跃'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// fn this指向obj1,箭头函数this也指向obj1</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//fn this 指向obj2,箭头函数this也指向obj2</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"构造函数调用模式\"><a href=\"#构造函数调用模式\" class=\"headerlink\" title=\"构造函数调用模式\"></a>构造函数调用模式</h2><p>new操作符调用时，<code>this</code>指向生成的新对象。 </p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Student</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token string\">'若川'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"call，apply和bind调用模式\"><a href=\"#call，apply和bind调用模式\" class=\"headerlink\" title=\"call，apply和bind调用模式\"></a><code>call</code>，apply和bind调用模式</h2><p>​    通过call、apply以及bind方法改变this的指向，也称为显式绑定</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'听风是风'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'时间跳跃'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> obj3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'echo'</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'行星飞行'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//行星飞行</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//听风是风</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//时间跳跃</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>obj3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//echo</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>​    指向参数提供的是null或者undefined，那么 this 将指向全局对象。</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'听风是风'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'时间跳跃'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'行星飞行'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>undefined<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//行星飞行</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//行星飞行</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>undefined<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//行星飞行</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>call、apply与bind有什么区别？</strong></p>\n<p>1.<code>call</code>、apply与bind都用于改变this绑定，但call、apply在改变this指向的同时还会执行函数，而bind在改变this后是返回一个全新的绑定函数，这也是为什么上方例子中bind后还加了一对括号 ()的原因。</p>\n<p>2.<code>bind</code>属于硬绑定，返回的 this 指向无法再次通过bind、apply或 call 修改；call与apply的绑定只适用当前调用，调用完就没了，下次要用还得再次绑。</p>\n<p>3.<code>call</code>与apply功能完全相同，唯一不同的是call方法传递函数调用形参是以散列形式，而apply方法的形参是一个数组。在传参的情况下，call的性能要高于apply，因为apply在执行时还要多一步解析数组。</p>\n<p>描述二：</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'听风是风'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'时间跳跃'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'行星飞行'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//听风是风</span>\n<span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//行星飞行</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//时间跳跃</span>\n<span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//行星飞行</span>\n<span class=\"token keyword\">let</span> boundFn <span class=\"token operator\">=</span> fn<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//听风是风</span>\nboundFn<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//听风是风</span>\nboundFn<span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//听风是风</span>\nboundFn<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//听风是风</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>描述三：</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'听风是风'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">,</span>describe<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`我是</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">,我的年龄是</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">，我非常</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>describe<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span><span class=\"token string\">'26'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'帅'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//我是听风是风,我的年龄是26，我非常帅</span>\nfn<span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">'26'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'帅'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//我是听风是风,我的年龄是26，我非常帅</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"对象中的函数（方法）调用模式\"><a href=\"#对象中的函数（方法）调用模式\" class=\"headerlink\" title=\"对象中的函数（方法）调用模式\"></a>对象中的函数（方法）调用模式</h2><p>​    如果函数调用时，前面存在调用它的对象，那么this就会隐式绑定到这个对象上</p>\n<pre><code> 如果函数调用前存在多个对象，this指向距离调用自己最近的对象\n</code></pre>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'行星飞行'</span><span class=\"token punctuation\">,</span>\n    func<span class=\"token punctuation\">:</span> fn<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'听风是风'</span><span class=\"token punctuation\">,</span>\n    o<span class=\"token punctuation\">:</span> obj\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nobj1<span class=\"token punctuation\">.</span>o<span class=\"token punctuation\">.</span><span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\" spellcheck=\"true\">//行星飞行</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>​    隐式丢失</p>\n<p>​        最常见的就是作为参数传递以及变量赋值</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token comment\" spellcheck=\"true\">// 参数传递</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'行星飞行'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'听风是风'</span><span class=\"token punctuation\">,</span>\n    fn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">param</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>fn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//行星飞行</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token comment\" spellcheck=\"true\">// 变量赋值</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'行星飞行'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'听风是风'</span><span class=\"token punctuation\">,</span>\n    fn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> fn1 <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>fn<span class=\"token punctuation\">;</span>\n<span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//行星飞行</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"原型链中的调用模式\"><a href=\"#原型链中的调用模式\" class=\"headerlink\" title=\"原型链中的调用模式\"></a>原型链中的调用模式</h2><p>是指向生成的新对象。 如果该对象继承自其它对象。同样会通过原型链查找。 </p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Student</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> s1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token string\">'若川'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nStudent<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>doSth <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\ns1<span class=\"token punctuation\">.</span><span class=\"token function\">doSth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>生成的新对象是Student:{name: ‘若川’}</p>\n<h2 id=\"DOM事件处理函数调用\"><a href=\"#DOM事件处理函数调用\" class=\"headerlink\" title=\"DOM事件处理函数调用\"></a><code>DOM</code>事件处理函数调用</h2><p><code>addEventerListener、attachEvent、onclick</code>指向绑定事件的元素</p>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>button <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"button\"</span><span class=\"token operator\">&gt;</span>onclick<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>ul <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"list\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">&gt;</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">&gt;</span><span class=\"token number\">2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">&gt;</span><span class=\"token number\">3</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n    <span class=\"token keyword\">var</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    button<span class=\"token punctuation\">.</span>onclick <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> ev<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// true</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> list <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    list<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// true</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> ev<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// true   //当前绑定事件的元素</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\" spellcheck=\"true\">//当前触发事件的元素</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>一些浏览器，比如<code>IE6~IE8</code>下使用<code>attachEvent</code>，<code>this</code>指向是<code>window</code>。</p>\n<h2 id=\"内涵事件处理函数调用\"><a href=\"#内涵事件处理函数调用\" class=\"headerlink\" title=\"内涵事件处理函数调用\"></a>内涵事件处理函数调用</h2><pre class=\"line-numbers language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>btn1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>console.log(this <span class=\"token punctuation\">=</span><span class=\"token punctuation\">=</span><span class=\"token punctuation\">=</span> document.querySelector(<span class=\"token punctuation\">'</span>.btn1<span class=\"token punctuation\">'</span>))<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>点我呀<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>console.log((function(){return this})());<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>再点我呀<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h1 id=\"this绑定优先级\"><a href=\"#this绑定优先级\" class=\"headerlink\" title=\"this绑定优先级\"></a>this绑定优先级</h1><p>​    显式绑定 &gt; 隐式绑定 &gt; 默认绑定</p>\n<p>​    new绑定 &gt; 隐式绑定 &gt; 默认绑定</p>\n",
            "tags": [
                "javascript"
            ]
        },
        {
            "id": "http://example.com/2022/09/17/zi-zu-jian-xiang-fu-zu-jian-chuan-zhi-this.emit-fu-zu-jian-jie-shou-fang-fa/",
            "url": "http://example.com/2022/09/17/zi-zu-jian-xiang-fu-zu-jian-chuan-zhi-this.emit-fu-zu-jian-jie-shou-fang-fa/",
            "title": "子组件向父组件传值this.$emit，父组件接收方法",
            "date_published": "2022-09-17T02:43:20.091Z",
            "content_html": "<p>子组件名字为ImageUpload</p>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">handleUploadSuccess</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input\"</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span>“方法名”<span class=\"token punctuation\">,</span> 参数<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>父组件接收方法</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"> <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item label<span class=\"token operator\">=</span><span class=\"token string\">\"菜品图片:\"</span> prop<span class=\"token operator\">=</span><span class=\"token string\">\"picUrl\"</span> <span class=\"token operator\">&gt;</span>\n   <span class=\"token operator\">&lt;</span>ImageUpload @input<span class=\"token operator\">=</span><span class=\"token string\">\"test\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item<span class=\"token operator\">&gt;</span>\n\nmethods<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "vue",
                "javascript"
            ]
        }
    ]
}